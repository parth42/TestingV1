@using DevExpress.Web.Mvc;
@using DevExpress.Web.Mvc.UI;
@model WordAutomationDemo.Models.AssignmentModel
@using Kendo.Mvc.UI
@using WordAutomationDemo.Helpers
@{
    ViewBag.Title = "Assigned Tasks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div>
        @*@Html.Partial("CommonMessages", Model.ModuleName)*@
    </div>
    <div class="alert alert-success" id="Message" style="display:none"></div>
    @if (ViewData.ContainsKey("Success"))
    {
        <div class="alert alert-success" id="create">
            <ul>
                <li>
                    @Html.Encode(ViewData["Success"])
                </li>
            </ul>
        </div>
        <script>
            $("#create").show().focus();
            setTimeout(function () {
                $("#create").hide();
            }, 5000);
        </script>
    }
    else if (ViewData.ContainsKey("Failure"))
    {
        <div class="alert alert-danger" id="Failure">
            <ul>
                <li>
                    @Html.Encode(ViewData["Failure"])
                </li>
            </ul>
        </div>
        <script>
            $("#Failure").show().focus();
            setTimeout(function () {
                $("#Failure").hide();
            }, 5000);
        </script>
    }
    <div class="col-sm-12">
        <div class="main-heading title-row mbp15">
            <div class="row">
                <div class="col-xs-12">
                    <input type="hidden" name="AssignDocID" value=" " id="AssignDocID" />
                    <input type="hidden" name="docName" value=" " id="docName" />
                    <h1 class="heading01">Assigned Tasks</h1>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12">
        @Html.ActionLink("Create New Task", "CreateAssignment", "Home", null, new { @class = "btn btn-primary", @title = "Create New Task", })
    </div>
    <div class="col-sm-12 mtp20">
        <div class="table-responsive nospacetd">
            <table class="table">
                <tr>
                    <td>
                        @{
                            string PPTPath = @Url.Content("~/ApplicationDocuments/PPTs/");
                            string DocPathGeneral = @Url.Content("~/App_Data/UserDocs/General/");
                            string DocPathTemp = @Url.Content("~/App_Data/Documents/");
                            string UploadedDocPath = @Url.Content("~/ApplicationDocuments/TaskDocuments/");
                            string ExcelPath = @Url.Content("~/ApplicationDocuments/Excels/");
                        }
                        @(Html.Kendo().Grid<WordAutomationDemo.Models.AssignmentModel>()
                                                  .Name("grid")
                                                  .Events(e => e.DataBound("onGridDataBound"))
                                                  .Columns(columns =>
                                                  {
                                                      columns.Bound(u => u.AssignmentTeam).Title("Assigned To").Groupable(false).Encoded(false).MinScreenWidth(320);

                                                      columns.Template(@<text><a title="Assigned Content ">@item.DocumentName</a></text>)
                                                              .ClientTemplate("#if(DocumentType=='3') {#<a style='cursor:pointer;' title='View' class='onlyicon redcolor' data-toggle='modal' onClick='OpenAssignedPPTDownloadView(this,#=AssignID#)' id='#=OriginalDocumentName#'><i class='fa fa-file-powerpoint-o' aria-hidden='true'></i></a> #} else if(DocumentType=='2') {#<a style='cursor:pointer;' title='View' class='onlyicon greencolor' data-toggle='modal' onClick='OpenAssignedExcelDownloadView(this,#=AssignID#)' id='#=OriginalDocumentName#'><i class='fa fa-file-excel-o' aria-hidden='true'></i></a> #} else if(DocumentType=='1'){# <a style='cursor:pointer;' title='View' class='onlyicon bluecolor' data-toggle='modal' onClick='OpenAssignedSnippet(this,#=AssignID#)' data-originalFile='#=OriginalDocumentName#' id='#=DocumentName#'><i class='fa fa-file-word-o' aria-hidden='true'></i></a>#} else if(DocumentType== '0') {# <a style='cursor:pointer;' title='View' class='onlyicon blackcolor' data-toggle='modal' onclick='OpenTaskDocuments(this,#=AssignID#,false)' id='#=AssignID#'><i class='fa fa-file-text-o' aria-hidden='true'></i></a>#} else {#N/A#}#")
                                                              .Title("Assigned Content")
                                                              .HtmlAttributes(new { style = "text-align:center" }).MinScreenWidth(450);

                                                      columns.Bound(u => u.DateTime).Groupable(false)
                                                            .Title("Assigned Date ")
                                                            .Format("{0:" + WordAutomationDemo.Helpers.CurrentUserSession.User.DTFormatGrid + "  hh:mm tt}").MinScreenWidth(320);
                                                      //.Width("10%");

                                                      columns.Bound(u => u.dtDueDate).Groupable(false)
                                                            .Title("Due Date ")
                                                            .Format("{0:" + WordAutomationDemo.Helpers.CurrentUserSession.User.DTFormatGrid + "}").MinScreenWidth(450);
                                                      //.Width("10%");

                                                      columns.Bound(u => u.TaskName).Groupable(false)
                                                          .Title("Task Name").MinScreenWidth(320);

                                                      columns.Template(@<text><a title="View">@item.Comments</a></text>)
                                                        .ClientTemplate("#{# #=Comments# <br/><a title='View Comment History' style='cursor:pointer; color:rgb(76,160,221); font-size:11px;'  onclick='OpenCommentHistory(#=AssignID#)'>View Comments</a> #}#")
                                                        .Title("Comments").HeaderHtmlAttributes(new { style = "width:200px;" }).MinScreenWidth(450);
                                                      //.Width("10%");

                                                      //columns.Bound(u => u.Remarks).Groupable(false)
                                                      //    .Title("Remarks");
                                                      //.Width("10%");

                                                      //columns.Bound(u => u.ProjectName).Groupable(false).Hidden()
                                                      //      .Title("Project  ").MinScreenWidth(450);
                                                      //.Width("8%");

                                                      columns.Bound(u => u.StatusButtonContent)
                                                          .Title("Status")
                                                          .Groupable(false)
                                                          .Filterable(false)
                                                          .Sortable(false)
                                                          .Encoded(false)
                                                          .HtmlAttributes(new { style = "text-align:center" })
                                                          .HeaderHtmlAttributes(new { style = "text-align:center" }).MinScreenWidth(450);
                                                      //columns.Bound(u => u.AssignmentStatus)
                                                      ////.Width("10%");
                                                      ////columns.Bound(u => u.AssignmentStatus)
                                                      //    .Title("Progress").MinScreenWidth(450);
                                                  }).Pageable(pageable => pageable.Refresh(true).PageSizes(WordAutomationDemo.Common.Global.recordPerPageList).ButtonCount(5).Input(true).Numeric(true)).DataSource(dataSource => dataSource.Ajax().Group(x => x.Add(c => c.ProjectName)).PageSize(WordAutomationDemo.Common.Global.PageSize).Read(read => read.Action("GetAllSnippets", "Home"))).Sortable().Filterable(f => f.Extra(false)).Groupable().EnableCustomBinding(true).AutoBind(true))
                    </td>
                </tr>
            </table>
        </div>

    </div>
</div>

<!-- Modal -->

<div class="modal fade bs-example-modal-lg" id="ReportsModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class=" modal-content">
            <div class="modal-header">

                <div class="pull-right">
                    <a id="DocdownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">

                <div>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="SlidesLinksModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">View Slides</h4>
            </div>
            <div class="modal-body" id="SlidesLinks">

            </div>

        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="ExcelModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="AssignedExcelDownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseAssignedExcel()">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="ExcelPartialContent" style="line-height:25px;">
                <div>

                </div>
            </div>
            <div class="modal-footer">
                <div class="row">

                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="UploadedDocModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="z-index:9999;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Documents </span></h4>
            </div>

            <div class="modal-body" id="UploadedDoc">

            </div>

        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="TaskSlidesLinksModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">

                <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseTaskSlides()">&times;</button>

                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Slides </span></h4>
            </div>

            <div class="modal-body" id="TaskSlidesLinks">

            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="CommentHistoryModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Comment History</h4>
            </div>
            <div class="modal-body">
                <div class="table-responsive bluetheme mtp15" id="partialContentComment">

                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="UploadedDocumentModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="UploadedDocumentDownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseUploadedDoc()">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="UploadedPartialContent" style="line-height:25px;">
                <div>

                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade" id="PagesLinksModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">View Pages</h4>
            </div>
            <div class="modal-body" id="PagesLinks">

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ReassignModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to Reassign this task ? </span></h4>
            </div>
            <div class="modal-body" id="partialContent">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label>Due Date</label>
                            <div class="input-group data" id="DueDate">
                                @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control" })
                                <span class="input-group-addon btn-primary"> <i class="fa fa-calendar" aria-hidden="true"></i> </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="form-group multiselectbox">
                            <label for="projectDocuments">Assign To</label>
                            @*@Html.DropDownListFor(x => x.UserID, Model.UserListItems, " - Select Assign To - ", new { @class = "form-control col-md-5 " })*@
                            <div id="grid1"></div>
                        </div>
                    </div>
                </div>
                <input type="hidden" name="DocType" value=" " id="DocType" />
                <input type="hidden" name="AssgnID" value=" " id="AssgnID" />
                <div class="modal-footer declineFooter" id="btnSubmitReassign">
                    <button type="button" class="btn btn-danger pull-right" style="width:200px" onclick="ReassignTask(this, $('#AssgnID').val(), $('#DocType').val(), $('#UserID').val(), $('#DueDate').val());" id="@Model.DocumentName">Reassign</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="popup" data-backdrop="static" style="border:1px solid gray;z-index:99999;display:none;">Popup</div>

<div class="modal fade bs-example-modal-lg" id="pageSnippetModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="DocdownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div>

                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>
<script id="template1" type="text/x-kendo-template">
    <div class="toolbar">

        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                    <input type="text" class="form-control" id='searchBox' placeholder="Search for...">
                    @*<span class="input-group-btn">
                            <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                        </span>*@
                </div>
            </div>
        </div>
    </div>
</script>
<script>


        function OpenSnippet(e) {
            var name = e.id;
            $("#DocdownloadLink").attr("href", '@DocPathTemp' + name)
            $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
            $('#ReportsModal').modal('show');
            $.get('@Url.Action("LoadOrginalDoc", "Home")', { name: name, userid: 1, IsReadOnly: true }, function (partialView) {
                $("#partialContent").html(partialView);

                $('#Snippet_R_TC_TPTCL_MinBtn').click();
                $('#Snippet_R_TC_TPTCL_MinBtnI').click();

            });
        }

        function OpenAssignedSnippet(e, AssignID) {
            var OriginalDocumentName = $(e).attr("data-originalFile");
            console.log(e.id, OriginalDocumentName);
            var name = "";
            if (e.id.indexOf("_") != -1) {
                name = 'Copy' + e.id;
            } else {
                name = 'Copy_' + e.id;
            }

            $.get('@Url.Action("HasAssignedPages","Home")',
                { AssignmentID: AssignID },
                function(result) {
                    if (result) {
                        $("#DocdownloadLink").attr("href", '@DocPathTemp' + name)
                        $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
                        $('#PagesLinksModal').modal('show');
                        OpenAssignedWordDownloadView(OriginalDocumentName, AssignID, true);
                    } else {
                        $("#DocdownloadLink").attr("href", '@DocPathTemp' + name)
                        $("#partialContent")
                            .html(
                                '<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
                        $('#ReportsModal').modal('show');
                        $.get('@Url.Action("LoadSnippet", "Home")',
                            { name: name, userid: 1, IsReadOnly: true },
                            function(partialView) {
                                $("#partialContent").html(partialView);
                                $('#Snippet_R_TC_TPTCL_MinBtn').click();
                            });
                    }
                });
        }

        function OpenAssignedWordDownloadView(name, assignmentID, assigned, assignToID) {
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $.get('@Url.Action("GetAssignedWordPages", "Home")', { FileName: name, AssignmentID: assignmentID }, function (result) {
            $.get('@Url.Action("UserCanApprove","Home")', { userId: userId, assignmentId: assignmentID }, function (canApprove) {

                var strhtml = '<div class="table-responsive bluetheme"><table class="table table-bordered">';
                if (result.length > 0) {
                    console.log(result);
                    if (!assigned) {

                        strhtml += '<thead>';
                        strhtml += '<th>Page Number</th>';
                        strhtml += '<th>Assigned</th>';
                        strhtml += '<th>Changed</th>';
                        strhtml += '<th>Comments</th>';
                        strhtml += '<th>Action</th>';
                        strhtml += '</thead>';
                        strhtml += '<tbody>';
                    }
                    else {
                        strhtml += '<thead>';
                        strhtml += '<th>Page Number</th>';
                        strhtml += '<th>Assigned</th>';
                        strhtml += '<th>Comments</th>';
                        strhtml += '</thead>';
                        strhtml += '<tbody>';
                    }
                    $.each(result, function (key, value) {

                        strhtml += '<tr>';
                        strhtml += '<td>' + value["PageNumber"] + '</td>';
                        //strhtml += "<td class='popover-hide-xs'><div class='aniimated-thumbnials'>" + "<a href='" + value["ThumbnailLink"] + "' data-toggle='popover' data-trigger='hover' data-placement='bottom' id='word" + value["PageNumber"] + "' class='gridthumb' data-original-title=''><img src='" + value["ThumbnailLink"] + "' class='img-responsive img-thumbnail'><div id='popover-content-word" + value["PageNumber"] + "' class='hide'><img src='" + value["ThumbnailLink"] + "' class='img-responsive'></div></a>" + '</div></td>';
                        strhtml += '<td><a style="cursor: pointer; " title="View" class="onlyicon bluecolor" data-toggle="modal" onclick="OpenPageSnippet(\'' + value["Ticks"] + '\',\'' + name + '\', ' + assignmentID + ', ' + value["PageNumber"] + ',true)"><i class="fa fa-file-word-o" aria-hidden="true"></i></a></td>';
                        if (!assigned) {

                            strhtml += "<td class='popover-hide-xs'><div class='aniimated-thumbnials'>" + "<a href='" + value["ThumbnailLink"] + "' data-toggle='popover' data-trigger='hover' data-placement='bottom' id='word" + value["PageNumber"] + "' class='gridthumb' data-original-title=''><img src='" + value["ThumbnailLink"] + "' class='img-responsive img-thumbnail'><div id='popover-content-word" + value["PageNumber"] + "' class='hide'><img src='" + value["ThumbnailLink"] + "' class='img-responsive'></div></a>" + '</div></td>';
                        }
                        //strhtml += '<td>' + value["PPTRemarks"] + '</td>';
                        strhtml += '<td></td>';
                        //if (userId != assignToID) {
                        if (!assigned) {

                            if (value["IsPPTApproved"] != null && value["IsPPTApproved"] == true) {
                                strhtml += '<td>Completed</td>';
                            }
                            else if (value["ReviewRequested"] != null && value["ReviewRequested"] && value["LockedByUserID"] != @CurrentUserSession.User.UserID){
                                strhtml += '<td class="popover-hide-xs"><a class="tableicon greenbg cursor" data-toggle="tooltip" data-placement="bottom" title="Approve" data-original-title="Approve" onclick="ApprovePage(this,' + value["PageNumber"] + "," + assignmentID + ')" id="' + value["OriginalFile"] + '"><i class="fa fa-thumbs-up" aria-hidden="true"></i></a> <a onclick="openPopupForDeclineSlide(this,' + value["AssignedWordPageID"] + "," + assignmentID + ')" id="' + value["OriginalFile"] + '" class="tableicon redbg cursor" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Decline"><i class="fa fa-thumbs-down" aria-hidden="true"></i></a></td>';
                            }
                            else if (value["ReviewRequested"] != null && value["ReviewRequested"]){
                                strhtml += '<td class="popover-hide-xs">Waiting for approval.</td>';
                            }
                            else if (value["IsPublished"] != null && value["IsPublished"]){
                                strhtml += '<td class="popover-hide-xs">Published</td>';
                            }
                            else {
                                strhtml += '<td class="popover-hide-xs"></td>';
                            }
                        }
                        //}
                        //else {
                        //    strhtml += '<td></td>';
                        //}
                        strhtml += '</tr>';
                    });
                    strhtml += '</tbody></table>';
                    $("#PagesLinks").html(strhtml);
                    $("[data-toggle=popover]").each(function (i, obj) {
                        $(this).popover({
                            html: true,
                            content: function () {
                                var id = $(this).attr('id')
                                return $('#popover-content-' + id).html();
                            }
                        });

                    });
                    $(".aniimated-thumbnials").lightGallery({
                        thumbnail: true,
                        animateThumb: false,
                        loop: false,
                        enableSwipe: true

                    });
                }
                else
                    $("#PagesLinks").html('<span class="center">No Pages found.</span>');

                $('#PagesLinksModal').modal('show');
            });
        });
    }
        function OpenPageSnippet(ticks, originalDocumentName, assignmentID, pageNumber, isReadOnly) {
            //var OriginalDocumentName = $(e).attr("data-originalFile");
            var name = assignmentID + "-" + ticks + "-" + pageNumber + ".docx";
            console.log(name);
            $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
            $('#pageSnippetModal').modal();
            $.get('@Url.Action("LoadPageSnippet", "Home")',
                { name: name, userid: 1, IsReadOnly: isReadOnly, originalFile: originalDocumentName },
                function (partialView) {
                    $("#pageSnippetModal #partialContent").html(partialView);

                    //$('#Snippet_R_TC_TPTCL_MinBtn').click();
                    //$('#Snippet_R_TC_TPTCL_MinBtn').click();
                });

        }

        $(document).ready(function () {
            $(".k-grouping-header").remove();
        });

        $("#ReportsModal").on('shown.bs.modal', function () {
            $('#OrignalDoc_R_TC_TPTCL_MinBtn').click();
            $('#Snippet_R_TC_TPTCL_MinBtn').click();
        });

        function OpenAssignedPPTDownloadView(e, assignementId) {

            var name = e.id;
            var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
            $.get('@Url.Action("GetSlidesAssignedByMe", "Home")', { FileName: name, userId: userId, AssignmentId: assignementId }, function (result) {
                var strhtml = '<div class="table-responsive bluetheme"><table class="table table-bordered">';
                strhtml += '<thead>';
                strhtml += '<th>File</th>';
                strhtml += '<th>Assigned</th>';
                strhtml += '</thead>';
                strhtml += '<tbody>';
                //var strhtml = '<table class="table table-bordered" style="word-break:break-all" id="SlideTable"><tbody>';
                if (result.length > 0) {
                    $.each(result, function (key, value) {
                        strhtml += '<tr>';
                        strhtml += '<td>' + value["SlideName"] + '</td>';
                        //strhtml += '<td><a href="' + value["SlideLink"] + '" target="_blank"  title ="Click to Download" ><i class="glyphicon glyphicon-download-alt"/> &nbsp' + value["SlideName"] + '</a></td>';
                        strhtml += value["ThumbnailLink"];
                        strhtml += '</tr>';
                    });
                    strhtml += '</tbody></table></div>';
                    $("#SlidesLinks").html(strhtml);
                    $("[data-toggle=popover]").each(function (i, obj) {
                        $(this).popover({
                            html: true,
                            content: function () {
                                var id = $(this).attr('id')
                                return $('#popover-content-' + id).html();
                            }
                        });

                    });
                    //$('.names').on('mouseenter', function (evt) {
                    //    $('.popup').html('<img src="' + $(this).data('id') + '">');
                    //    $('.popup').css({ left: 325, top: 0 }).show();
                    //    $(this).on('mouseleave', function () {
                    //        $('.popup').hide();
                    //    });
                    //});

                }
                else
                    $("#SlidesLinks").html('<span class="center">No Slides found.</span>');

                $('#SlidesLinksModal').modal('show');
            });
        }

        function OpenAssignedExcelDownloadView(e, assignmentID,username) {
            var name = e.id;
            var originalDocumentName = e.name;
            $("#AssignedExcelDownloadLink").attr("href", '@ExcelPath' + "Sheets_" + originalDocumentName + "/AssignedDoc/" + assignmentID + "_Copy_" + name);
            $("#ExcelPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');

            $('#ExcelModal').modal('show');
            setTimeout(function () {
                $.get('@Url.Action("LoadAssignedChangedExcel", "Home")',
                    {
                        originalDocumentName: originalDocumentName,
                        name: originalDocumentName,
                        userid: @WordAutomationDemo.Helpers.CurrentUserSession.User.UserID,
                        Action: 1,
                        IsReadOnly: true,
                        assignmentId: assignmentID
                    },
                    function (partialView) {
                    $("#ExcelPartialContent").html(partialView);
                    $('.dxr-minBtn').click();
                    $('#Snippet_R_TC_TPTCL_MinBtn').click();
                });
            }, 1000);
        }

        function CloseAssignedExcel() {
            $('#ExcelModal').modal('hide');
        }

        function OpenExcel(e, assignmentID) {
            var name = e.id;
            var originalDocumentName = e.name;
            $("#AssignedExcelDownloadLink").attr("href", '@ExcelPath' + "Sheets_" + originalDocumentName + "/AssignedDoc/" + assignmentID + "_Copy_" + name);
            $("#ExcelPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
            $('#SheetLinksModal').modal('hide');
            $('#ExcelModal').modal('show');
            setTimeout(function () {
            $.get('@Url.Action("LoadExcel", "Home")', { OriginalDocumentName: originalDocumentName, name: name, userid: 1, IsReadOnly: true }, function (partialView) {
                $("#ExcelPartialContent").html(partialView);
                $('.dxr-minBtn').click();
                $('#Snippet_R_TC_TPTCL_MinBtn').click();
            });
            }, 1000);
        }

        function GetTaskPPTSlides(doc, assignDocID) {

            $.get('@Url.Action("GetAllTaskSlides", "Home")', { assignedDocsID: assignDocID }, function (result) {

                var strhtml = '<table class="table table-bordered" style="word-break:break-all" id="SlideTable"><tbody>';
                if (result.Data.length > 0) {
                    $.each(result.Data, function (key, value) {
                        strhtml += '<tr>';
                        strhtml += '<td><a href="' + value["SlideLink"] + '" target="_blank"  title ="Click to Download" ><i class="glyphicon glyphicon-download-alt"/> &nbsp' + value["SlideName"] + '</a></td>';
                        strhtml += '<td>' + value["ThumbnailLink"] + '</td>';
                        strhtml += '</tr>';
                    });
                    strhtml += '</tbody></table>';
                    $("#TaskSlidesLinks").html(strhtml);

                    //$('.names').on('mouseenter', function (evt) {
                    //    $('.popup').html('<img src="' + $(this).data('id') + '">');
                    //    $('.popup').css({ left: 325, top: 0 }).show();
                    //    $(this).on('mouseleave', function () {
                    //        $('.popup').hide();
                    //    });
                    //});

                }
                else
                    $("#TaskSlidesLinks").html('<span class="center">No Slides found.</span>');

                $('#TaskSlidesLinksModal').modal('show');
                $('#UploadedDocModal').modal('hide');
            });

            @*$("#downloadLink").attr("href", '@PPTPath' + "/" + assignDocID)
        $("#AssignDocID").val(assignDocID);
        $("#docName").val(doc.text);
        $("#listTaskView").data("kendoListView").dataSource.read();
        $('#AllTaskSlidesModel').modal('show');
        $('#UploadedDocModal').modal('hide');*@
        }

        //databound column
        function onGridDataBound(e) {
            $(".k-grouping-header").remove();
            var grid = $("#" + e.sender.element[0].id).data("kendoGrid");
            var dataSource = grid.dataSource;
            //total records
            var totalRecords = dataSource.total();
            if (totalRecords <= 0) {
                var colCount = grid.columns.length;
                $("#" + e.sender.element[0].id).find('tbody').html('');
                $("#" + e.sender.element[0].id).find('tbody').append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data" style="text-align: center;">No records found.</td></tr>');
            }
        }

        function ShowImg(obj) {
            $('.popup').hide();
            $('.popup').html('<img style="border:1px solid"  src="' + $(obj).data('id') + '" />');
            var offset = $(obj).offset();
            $('.popup').css('left', 300);
            if (offset.top < 200) {
                $('.popup').css('top', (offset.top - 50));
            }
            else {
                $('.popup').css('top', 50);
            }
            $('.popup').show();
        }

        function HideImg(obj) {
            $('.popup').hide();
        }

        function OpenTaskDocuments(e, assignmentID, assigned) {
            var name = e.id;
            var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
            $.get('@Url.Action("GetUploadedDoc", "Home")', { userId: userId, getAssigned: assigned, AssignmentId: assignmentID }, function (result) {

                var strhtml = '<table class="table table-bordered" style="word-break:break-all" id="DocTable">';
                if (result.length > 0) {
                    if (!assigned) {

                        strhtml += '<thead>';
                        strhtml += '<th>Document Name</th>';
                        strhtml += '<th style="width:180px; text-align:center;">Download Document</th>';
                        strhtml += '</thead>';
                        strhtml += '<tbody>';
                    }
                    $.each(result, function (key, value) {


                        strhtml += '<tr>';
                        if (value["IsDocFile"] != null && value["IsDocFile"] == true) {
                            strhtml += '<td> <a href="#" onclick="OpenDownloadedDocument(this,' + assignmentID + ')" title ="Click to View">' + value["DocName"] + '</a></td>';
                        }
                        else if (value["IsPPTFile"] != null && value["IsPPTFile"] == true) {
                            strhtml += '<td> <a href="#" onclick="GetTaskPPTSlides(this,' + value["AssignedDocsID"] + ')" title ="Click to View">' + value["DocName"] + '</a></td>';
                        }
                        else {
                            strhtml += '<td>' + value["DocName"] + '</td>';
                        }
                        strhtml += '<td style="text-align:center;"> <a href="' + '@UploadedDocPath' + assignmentID + "/" + value["DocName"] + '" title ="Click to Download" >' + '<img src="' + value["DownloadImagePath"] + '" style="cursor:pointer" />' + '</a></td>';
                        strhtml += '</tr>';
                    });
                    strhtml += '</tbody></table>';
                    $("#UploadedDoc").html(strhtml);
                }
                else
                    $("#UploadedDoc").html('<span class="center">No documents have been uploaded.</span>');

                $('#UploadedDocModal').modal('show');
            });
        }

        function OpenDownloadedDocument(doc, assignmentID) {
            $("#UploadedDocumentDownloadLink").attr("href", '@UploadedDocPath' + assignmentID + "/" + doc.text)
            $("#UploadedPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
            $('#UploadedDocModal').modal('hide');
            $('#UploadedDocumentModal').modal('show');
            $.get('@Url.Action("LoadDownloadedDoc", "Home")', { name: doc.text, assignmentID: assignmentID, userid: 1, IsReadOnly: true }, function (partialView) {
                $("#UploadedPartialContent").html(partialView);
                $('.dxr-minBtn').click();
            });
        }

        function CloseUploadedDoc() {
            $('#UploadedDocModal').modal('show');
        }

        function CloseTaskSlides() {
            $('#UploadedDocModal').modal('show');
        }

        function AllTaskSlidesParamas() {
            return {
                assignedDocsID: $("#AssignDocID").val(),
                docName: $("#docName").val()
            };
        }

        $(document).ajaxStart(function () {
            if ($(".k-loading-image:visible").length > 0) {
                $("#loading").hide();
            }
            else {
                $("#loading").show();
            }
            //$(".k-loading-image").hide();
        });
        $(document).ajaxStop(function () {
            $("#loading").hide();
        });
        function OpenCommentHistory(assignmentID) {
            //var name = "Documents/" + e.id;
            $("#partialContentComment").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
            $('#CommentHistoryModal').modal('show');
            $.get('@Url.Action("LoadCommentHistory", "Home")', { assignmentID: assignmentID }, function (partialView) {
                $("#partialContentComment").html(partialView);
            });
        }

        function setProjectGrid(result) {
            if (result.length > 0) {
                $('#grid1').html('');
                var grid = $('#grid1').kendoGrid({
                    dataSource: {
                        data: result
                    },
                    toolbar: [
                        { template: kendo.template($("#template1").html()) }
                    ],
                    groupable: false,
                    sortable: false,
                    pageable: false,
                    scrollable: true,
                    //height: "400px",
                    columns: [{
                            template: "<div class='inlinetitle'>" +
                                "<div class='inlineuserinfo' style='text-overflow: ellipsis;'><h3>#: FullName #</h3><p>#: Company#</p></div></div>",
                            field: "FullName",
                            title: "Team Member"
                        },
                        {
                            field: "Permission",
                            title: "Permission",
                            template: "<select id='permission-#=UserId#' onchange='selectUser(#=UserId#);'>" +
                                "<option value='-1'>Select a permission</option>" +
                                "<option value='1' #if(CanEdit){ #selected# } #>Edit</option>" +
                                "<option value='2' #if(CanPublish){ #selected# } #>Publish</option>" +
                                "<option value='3' #if(CanApprove){ #selected# } #>Approve</option>" +
                                "<option value='4' #if(CanView){ #selected# } #>View</option></select>"
            }
                    ]
                }).data("kendoGrid");

                $("#searchBox").keyup(function () {
                    var searchValue = $('#searchBox').val();
                    var grid = $("#grid1").data("kendoGrid");
                    if (searchValue) {
                        grid.dataSource.filter({ field: "FullName", operator: "contains", value: searchValue });
                    } else {
                        grid.dataSource.filter({});
                    }

                });

            } else {
                var msg = getProjectId > 0 ? "Add a team member" : "Select a project to choose team members";
                $('#grid1').html('<div class="jumbotron center data-hint" style="min-height:190px;">' + msg + '</div>');
                $("#UserID option").remove();
                $("#subtaskUserID").remove();
                $("#UserID").append('<option value=""> - Select Assign To - </option>');
                $("#subtaskUserID").append('<option value=""> - Select Assign To - </option>');
            }
        }

        var selectedUsers = [];

        function selectUser(userID) {
            console.log(userID);
            var selected = $("#permission-" + userID).find(":selected").val();
            var CanEdit = selected == 1;
            var CanPublish = selected == 2;
            var CanApprove = selected == 3;
            var CanView = selected == 4;
            var none = selected == -1;

            var newSelectedUser = {
                userID: userID,
                canEdit: CanEdit,
                CanApprove: CanApprove,
                CanPublish: CanPublish
            };

            console.log(userID, CanEdit, CanPublish, CanApprove,  CanView);

            selectedUsers = selectedUsers.filter(function (su) {
                return su.userID !== userID;
            });

            if (!none) {
                selectedUsers.push(newSelectedUser);
            }

            console.log(selectedUsers);
            $('input:hidden[name=AssignmentMemberList]').val(JSON.stringify(selectedUsers));
        }

        function openPopupForReassign(e, id, type, projectID, userID, dueDate) {
            $('#' + e.id).removeAttr('disabled', 'disabled');
            $("#docName").val(e.id);
            $("#DocType").val(type);
            $("#AssgnID").val(id);
            $("#ReassignRemarks").val("");
            $('#UserID').val('');
            $("#ReassignModal #DueDate").datetimepicker({
                format:   '@WordAutomationDemo.Helpers.CurrentUserSession.User.DTformat',
                viewMode: 'days',
                useCurrent: false,
                allowInputToggle: true,
                minDate: moment().add(-1, 'd').toDate(),
                date: new Date(dueDate)
            });
            $("#ReassignModal #DueDate").datetimepicker({
                //format: 'L'
                format: '@WordAutomationDemo.Helpers.CurrentUserSession.User.DTformat'
                //viewMode: 'days',
                //useCurrent: false,
                //allowInputToggle: true,
                //minDate: moment().add(-1, 'd').toDate(),
                //defaultDate: dueDate,
                //date: new Date(dueDate)
            });
            $("#ReassignModal #DueDate").on("dp.change", function (e) {
                $(this).blur();
            });
            $("#ReassignModal #DueDate").val(dueDate)
            $.get('@Url.Action("GetMembersByProjectForReassign", "Home")', { ProjectID: projectID, AssignmentID: id }, function (result) {

                setProjectGrid(result);
                $('#ReassignModal').modal('show');
            });

        }

        function CancelTask(e) {
            var assignmentId = $(e).attr('data-assign-id');
            var filename = $(e).attr('data-doc-file');
            var filetype = $(e).attr('data-doc-type');

            console.log(assignmentId, filename, filetype);
            $.get('@Url.Action("CancelTask", "Home")', { AssignmentID: assignmentId, OriginalFilename: filename, DocType: filetype }, function (data) {
                if (data) {
                    $("#grid").data("kendoGrid").dataSource.read();
                    $("#Message").html("Task has been cancelled successfully");
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            });

        }

        function ReassignTask(e, AssigneID, docType, userID, dueDate) {
            $(e).attr('disabled', 'disabled');
            var actionId = '@((int)WordAutomationDemo.Common.Global.Action.Assigned)';
            var ppt = '@((int)WordAutomationDemo.Common.Global.DocumentType.Ppt)';
            var excel = '@((int)WordAutomationDemo.Common.Global.DocumentType.Xls)';

            var grid = $("#grid1").data("kendoGrid");
            var selUsers = $(grid.tbody).find(":selected");
            for (var i = 0; i < selUsers.length; i++) {
                var selUser = selUsers[i];
                var userId = parseInt($(selUser).parent().attr("id").split("-")[1]);
                selectUser(userId);
            }

            var canEditCount = selectedUsers.filter(function (su) { return su.canEdit }).length;
            var canPublishCount = selectedUsers.filter(function (su) { return su.CanPublish }).length;
            //var canApproveCount = selectedUsers.filter(function (su) { return su.CanApprove }).length;

            if ((canEditCount + canPublishCount) == 0) {
                alert("Please select at least one editor.");
                $(e).removeAttr('disabled', 'disabled');
                return;
            } else {
                var doc = $("#DocName").val();
                var remarks = $("#ReassignRemarks").val();
                if (docType == ppt) {
                    $.get('@Url.Action("ReassignTaskPPT", "Home")', { document: doc, DeclineReason: remarks, AssignID: AssigneID, assignedTo: JSON.stringify(selectedUsers), dueDate: dueDate }, function (resp) {
                        if (resp) {
                            $("#grid").data("kendoGrid").dataSource.read();
                            $('#ReassignModal').modal('hide');
                            $("#Message").html("Task has been reassigned successfully")
                            $("#Message").show().focus();
                            setTimeout(function () {
                                $("#Message").hide();
                            }, 5000);
                        }
                    });

                }
                else {
                    $.get('@Url.Action("ReassignTask", "Home")', { document: doc, DeclineReason: remarks, AssignID: AssigneID, assignedTo: JSON.stringify(selectedUsers), dueDate: dueDate }, function (resp) {
                        if (resp) {
                            $("#grid").data("kendoGrid").dataSource.read();
                            $('#ReassignModal').modal('hide');
                            $("#Message").html("Task has been reassigned successfully")
                            $("#Message").show().focus();
                            setTimeout(function () {
                                $("#Message").hide();
                            }, 5000);
                        }
                    });
                }
                $(e).removeAttr('disabled', 'disabled');
            }
        }
</script>
<script type="text/javascript">
        var x = 0;
        var flag = false;
        var Strikeflag = false;
        var isBackSpace = false;
        var BackSpaceCommand;
        var InsertCommand;
        function DocumentChanged(s, e) {

            //console.log("-- Document Changed --");

            var CurrentCommand = Snippet.core.commandManager.lastCommandsChain[0]; // detect BACKSPACE
            //console.log(CurrentCommand);
            if (CurrentCommand == BackSpaceCommand) {
                //console.log("-- BackSpace Pressed --");
                //console.log(s);
                //check for newly added text for deletion
                //var selection = Snippet.core.selection.getLastSelectedInterval();
                //Snippet.core.selection.setSelection(selection.start - 1, selection.start + 1);
                //var color = Snippet.commands.changeFontFormatting.getState().value.foreColor;
                //console.log(color);
                //if (color != '#0000FF') {
                OverrideBackSpace(Snippet, e);
                //}
                //else {
                //    Snippet.core.selection.setSelection(selection.start, selection.start);
                //}

            }
            else if (CurrentCommand == InsertCommand) { // detect INSERT Text
                console.log("-- No BackSpace --");
                console.log(s);
                GetNewAddedText(Snippet);
            }
            else {
                flag = false;
            }
        }

        function DocumentInit(s, e) {
            var pointer = Snippet.core.selection.getLastSelectedInterval();
            x = (pointer.start);
            BackSpaceCommand = Snippet.core.commandManager.getCommand(__aspxRichEdit.RichEditClientCommand.ToggleBackspaceKey); // or 125
            InsertCommand = Snippet.core.commandManager.commands["117"];  // Set insert command at init
        }

        _spreadsheet = null;
        function spreadsheet_SelectionChanged(s, e) {
            _spreadsheet = s;
        }

        function OverrideBackSpace(rich, e) {

            Strikeflag = false;
            if (Strikeflag == false) {
                Strikeflag = true;
                rich.core.commandManager.commands["6"].execute(); // undo command
                var selection = rich.core.selection.getLastSelectedInterval();
                if (selection.length == 0) {
                    rich.core.selection.setSelection(selection.start - 1, selection.start);
                }
                else if (selection.length > 0) {
                    rich.core.selection.setSelection(selection.start, selection.start + selection.length);
                }
                if (rich.commands.changeFontFormatting.getState().value.foreColor == '#0000FF') {
                    rich.core.commandManager.commands["7"].execute(); // redo command
                }
                else if (rich.core.commandManager.commands["24"].getState().value == 0 || rich.core.commandManager.commands["24"].getState().value == undefined) {
                    rich.commands.changeFontStrikeout.execute()
                }
                rich.core.selection.setSelection(selection.start - 1, selection.start - 1);


            }
        }

        function GetNewAddedText(rich) {


            var selection = rich.core.selection.getLastSelectedInterval();
            x = (selection.start);
            if (flag == false) {
                flag = true;
                rich.core.selection.setSelection(selection.start - 1, selection.start);
                if (rich.core.commandManager.commands["24"].getState().value == 1) {
                    rich.commands.changeFontStrikeout.execute();
                }
                rich.commands.changeFontFormatting.execute({ foreColor: "#0000FF" })
                rich.core.selection.setSelection(selection.start, selection.start);
            }
            else {
                rich.core.selection.setSelection(selection.start, selection.start);
                flag = false;
            }
    }

    function SelectionChanged() {

    }
        $(window).off("resize").on("resize", function () {
            $(".popover").each(function () {
                var popover = $(this);
                if (popover.is(":visible")) {
                    var ctrl = $(popover.context);
                    ctrl.popover('show');
                }
            });
        });
</script>
<style>
    #spreadsheet_SSFB {
        display: none !important;
    }

    #spreadsheetChanged_SSFB {
        display: none !important;
    }

    #spreadsheetOriginal_SSFB {
        display: none !important;
    }

    #spreadsheetInline_SSFB {
        display: none !important;
    }
    .tooltip-permission {
        position: absolute;
        /*display: inline-block;*/
        border-bottom: 1px dotted black;
    }

    .tooltip-permission .tooltiptext {
        visibility: hidden;
        width: 120px;
        background-color: #555;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 5px 0;
        position: absolute;
        z-index: 1;
        bottom: 125%;
        left: 50%;
        margin-left: -60px;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .tooltip-permission .tooltiptext::after {
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        margin-left: -5px;
        border-width: 5px;
        border-style: solid;
        border-color: #555 transparent transparent transparent;
    }

    .tooltip-permission:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
    }
</style>