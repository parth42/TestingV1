@using DevExpress.Web.Mvc;
@using DevExpress.Web.Mvc.UI;
@model WordAutomationDemo.Models.AssignmentModel
@using Kendo.Mvc.UI
@using WordAutomationDemo.Helpers;
@using WordAutomationDemo.Models
@{
    ViewBag.Title = "My Tasks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div>
        @*@Html.Partial("CommonMessages", Model.ModuleName)*@
    </div>
    <div class="col-sm-12">
        <div class="alert alert-success" id="Message" style="display:none"></div>
    </div>

    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Approved")
    {
        <div class="col-sm-12">
            <div class="alert alert-success">
                @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.Approved))
            </div>
        </div>
        <script>
            $("#Approved").show().focus();
            setTimeout(function () {
                $("#Approved").hide();
            }, 5000);
        </script>
    }
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Declined")
    {
        <div class="col-sm-12">
            <div class="alert alert-success">
                @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.Declined))
            </div>
        </div>
        <script>
            $("#Declined").show().focus();
            setTimeout(function () {
                $("#Declined").hide();
            }, 5000);
        </script>
    }
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Completed")
    {
        <div class="col-sm-12">
            <div class="alert alert-success">
                @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.Completed))
            </div>
        </div>
        <script>
            $("#Completed").show().focus();
            setTimeout(function () {
                $("#Completed").hide();
            }, 5000);
        </script>
    }

    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Saved")
    {
        <div class="col-sm-12">
            <div class="alert alert-success">
                @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.Saved))
            </div>
        </div>
        <script>
            $("#Saved").show().focus();
            setTimeout(function () {
                $("#Saved").hide();
            }, 5000);
        </script>
    }

    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Error")
    {
        <div class="col-sm-12">
            <div class="alert alert-danger">
                @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.Error))
            </div>
        </div>
        <script>
            $("#error").show().focus();
            setTimeout(function () {
                $("#error").hide();
            }, 5000);
        </script>
    }

    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Processed")
    {
        <div class="col-sm-12">
            <div class="alert alert-danger">
                @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.Processed))
            </div>
        </div>
        <script>
            $("#error").show().focus();
            setTimeout(function () {
                $("#error").hide();
            }, 5000);
        </script>
    }

    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "NoFound")
    {
        <div class="col-sm-12">
            <div class="alert alert-danger">
                @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.RecordNotFound))
            </div>
        </div>
        <script>
            $("#error").show().focus();
            setTimeout(function () {
                $("#error").hide();
            }, 5000);
        </script>
    }
    <div class="col-sm-12">
        <div class="main-heading title-row mbp15">
            <div class="row">
                <div class="col-xs-12">
                    <input type="hidden" name="MasterDocName" id="MasterDocName" value="" />
                    <input type="hidden" name="DocName" value=" " id="DocName" />
                    <input type="hidden" name="AssignDocID" value=" " id="AssignDocID" />
                    <h1 class="heading01">My Tasks</h1>
                </div>
            </div>
        </div>
    </div>
    <div id="BulkDiv" style="display:none" class="col-sm-12">
        <button id="btnBulkApprove" class="lightblue-btn btnspace" onclick='return Check_CheckBox_Count_ApproveDecline("approve");'><i class="fa fa-thumbs-up" aria-hidden="true"></i> Approve</button>
        <button id="btnBulkApprove" class="darkred-btn btnspace" onclick='return Check_CheckBox_Count_ApproveDecline("decline");'><i class="fa fa-thumbs-down" aria-hidden="true"></i> Decline</button>
    </div>
    <div class="col-sm-12">
        @Html.ActionLink("Create New Task", "CreateAssignment", "Home", null, new { @class = "btn btn-primary", @title = "Create New Task", })
    </div>
    <div class="col-sm-12 mtp20">
        <div class="table-responsive nospacetd">
            <table>
                <tr>
                    <td>


                        @{
                            string PPTPath = @Url.Content("~/ApplicationDocuments/PPTs/");
                            string ExcelPath = @Url.Content("~/ApplicationDocuments/Excels/");
                            string DocPathGeneral = @Url.Content("~/App_Data/UserDocs/General/");
                            //string DocPathGeneral = System.Web.Hosting.HostingEnvironment.MapPath(@"~/App_Data/Documents/");
                            //string DocPathGeneral = HttpContext.Current.ApplicationInstance.Server.MapPath(@"~/App_Data/Documents/");
                            string DocPathTemp = @Url.Content("~/App_Data/Documents/");
                            string UploadedDocPath = @Url.Content("~/ApplicationDocuments/TaskDocuments/");
                        }

                        @(Html.Kendo().Grid<WordAutomationDemo.Models.AssignmentModel>()
                                    .Name("taskgrid")
                                    .Events(e => e.DataBound("onGridDataBound"))
                                    .Columns(columns =>
                                    {
                                        columns.Bound(u => u.CheckBoxApproveDecline)
                                            .HeaderTemplate(@<input id="allCheckBox" name="allCheckBox" type="checkbox" title="check all records" onclick="return initializeAllCheckBox();" />)
                    .Groupable(false)
                    .Encoded(false)
                    .Sortable(false)
                    .Filterable(false)
                    .HtmlAttributes(new { style = "text-align:center" })
                    .HeaderHtmlAttributes(new { style = "text-align:center" }).MinScreenWidth(320);

                            columns.Template(@<text><a title="View" class="onlyicon redcolor" data-toggle="modal"><i class="fa fa-file-powerpoint-o" aria-hidden="true"></i></a></text>)
                .ClientTemplate("#if(DocumentType=='3') {# <a style='cursor:pointer;' title='View' class='onlyicon redcolor' data-toggle='modal' onclick='GetPPTSlides(this)' id='#=OriginalDocumentName#'><i class='fa fa-file-powerpoint-o' aria-hidden='true'></i></a>#} else if(DocumentType=='2') {# <a style='cursor:pointer;' title='View' class='onlyicon greencolor' data-toggle='modal' onclick='OpenUploadedExcelCopy(this)' id='#=OriginalDocumentName#'><i class='fa fa-file-excel-o' aria-hidden='true'></i></a>#} else if(DocumentType=='1'){#<a style='cursor:pointer;' title='View' class='onlyicon bluecolor' data-toggle='modal' onclick='OpenUploadedCopy(this,#=AssignmentID#)' id='#=OriginalDocumentName#'><i class='fa fa-file-word-o' aria-hidden='true'></i></a>#} else if(DocumentType== '0'){#N/A#}#")
                .Title("Updated Doc")
                .HtmlAttributes(new { style = "text-align:center" }).MinScreenWidth(450).Visible(CurrentUserSession.User.HasUpdatedDocViewPermission);
                        //.Width("5%");

                        columns.Template(@<text><a title="View" class="onlyicon redcolor" data-toggle="modal"><i class="fa fa-file-powerpoint-o" aria-hidden="true"></i></a></text>)
            .ClientTemplate("#if(DocumentType=='3') {# <a style='cursor:pointer;' title='View' class='onlyicon redcolor' data-toggle='modal' onclick='OpenAssignedPPTDownloadView(this,#=AssignmentID#,true,#=UserID#)' id='#=OriginalDocumentName#'><i class='fa fa-file-powerpoint-o' aria-hidden='true'></i></a>#} else if(DocumentType=='2') {# <a style='cursor:pointer;' title='View' class='onlyicon greencolor' data-toggle='modal' onclick='OpenAssignedExcelDownloadView(this,#=AssignmentID#,true,#=UserID#)' id='#=OriginalDocumentName#'><i class='fa fa-file-excel-o' aria-hidden='true'></i></a>#} else if(DocumentType=='1'){#<a style='cursor:pointer;' title='View' class='onlyicon bluecolor' data-toggle='modal' onclick='OpenAssignedSnippet(this,#=AssignmentID#)' data-originalFile='#=OriginalDocumentName#' id='#=DocumentName#'><i class='fa fa-file-word-o' aria-hidden='true'></i></a>#} else if(DocumentType== '0'){#N/A#}#")
            .Title("Assigned Content ")
            .HtmlAttributes(new { style = "text-align:center" }).MinScreenWidth(450);
                    //.Width("5%");

                    columns.Template(@<text><a title="Changed Content ">@item.DocumentName</a></text>)
        .ClientTemplate("#if(DocumentType=='3') {# <a style='cursor:pointer;' title='View' class='onlyicon redcolor' data-toggle='modal' onclick='OpenAssignedPPTDownloadView(this,#=AssignmentID#,false,#=UserID#)' id='#=OriginalDocumentName#'><i class='fa fa-file-powerpoint-o' aria-hidden='true'></i></a> #} else if(DocumentType=='2') {# <a style='cursor:pointer;' title='View' class='onlyicon greencolor' data-toggle='modal' onclick='OpenAssignedExcelDownloadView(this,#=AssignmentID#,false,#=UserID#)' id='#=OriginalDocumentName#'><i class='fa fa-file-excel-o' aria-hidden='true'></i></a> #} else if(DocumentType=='1'){#<a style='cursor:pointer;' title='View' class='onlyicon bluecolor' data-toggle='modal' onclick='OpenSnippet(this,#=AssignmentID#)' data-originalFile='#=OriginalDocumentName#' id='#=DocumentName#'><i class='fa fa-file-word-o' aria-hidden='true'></i></a>#} else if(DocumentType== '0'){#N/A#}#")
        .Title("Changed Content ")
        .HtmlAttributes(new { style = "text-align:center" }).MinScreenWidth(450);
                //.Width("5%");

                @*columns.Template(@<text><a title="Uploaded Doc">Uploaded Doc</a></text>)
                    .ClientTemplate("#if(DocumentType== '0') {# <a style='cursor:pointer;' title='View' class='onlyicon blackcolor' data-toggle='modal' onclick='OpenTaskDocuments(this,#=AssignmentID#,false)' id='#=AssignmentID#'><i class='fa fa-file-text-o' aria-hidden='true'></i></a>#} else {#N/A#}#")
                    .Title("Uploaded Doc")
                    .HtmlAttributes(new { style = "text-align:center" }).MinScreenWidth(450);*@
                //.Width("5%");

                columns.Bound(u => u.DateTime).Groupable(false)
         .Title("Assigned Date ")
         .Format("{0:" + @WordAutomationDemo.Helpers.CurrentUserSession.User.DTFormatGrid + "  hh:mm tt}").MinScreenWidth(450);
                //.Width("8%");

                columns.Bound(u => u.dtDueDate).Groupable(false)
        .Title("Due Date ")
        .Format("{0:" + @WordAutomationDemo.Helpers.CurrentUserSession.User.DTFormatGrid + "}").MinScreenWidth(450);
                //.Width("6%");

                columns.Bound(u => u.dtCompletedDate).Groupable(false)
        .Title("Completed Date ")
        .Format("{0:" + @WordAutomationDemo.Helpers.CurrentUserSession.User.DTFormatGrid + "  hh:mm tt}").MinScreenWidth(450);
                //.Width("6%");

                columns.Bound(u => u.TaskName).Groupable(false)
        .Title("Task Name").MinScreenWidth(320);

        columns.Template(@<text><a title="View">@item.Comments</a></text>)
    .ClientTemplate("#{# #=Comments# <br/><a title='View Comment History' style='cursor:pointer; color:rgb(76,160,221); font-size:11px;'  onclick='OpenCommentHistory(#=AssignmentID#)'>View Comments</a> #}#")
    .Title("Comments").Width(350);

    //.Width("11%");

    //columns.Bound(u => u.Remarks).Groupable(false)
    //.Title("Remarks");
    //.Width("11%");

    //columns.Bound(u => u.ProjectName).Hidden()
    //.Title("Project")
    //.Groupable(false).MinScreenWidth(450);
    //.Width("8%");

    columns.Bound(u => u.AssignedBy).MinScreenWidth(450)
    .Groupable(false);
    //.Width("10%");

    columns.Bound(u => u.AssignmentTeam)
    .Title("Assigned To ").Groupable(false).Width(220).Encoded(false).HtmlAttributes(new { style = "text-align:center" });
    //.Width("10%");

    columns.Bound(u => u.StatusButtonContentForMerge)
    .Title("Action")
    .Groupable(false)
    .Encoded(false)
    .HtmlAttributes(new { style = "text-align:center" })
    .HeaderHtmlAttributes(new { style = "text-align:center" })
    .Width("100px")
    .Sortable(false).Filterable(filterable => filterable.Extra(false)
    //.UI("actionFilter")
    .Operators(operators => operators
    .ForString(str => str.Clear()
    .IsEqualTo("Is equal to")
    .IsNotEqualTo("Is not equal to")))).MinScreenWidth(320);

}).Pageable(pageable => pageable.Refresh(true).PageSizes(WordAutomationDemo.Common.Global.recordPerPageList)
.ButtonCount(5).Input(true).Numeric(true))
.DataSource(dataSource => dataSource.Ajax()
.Group(x => x.Add(c => c.ProjectName))
.PageSize(WordAutomationDemo.Common.Global.PageSize)
.Read(read => read.Action("GetMySnippets", "Home").Data("passData")))
.Sortable().Filterable(f => f.Extra(false)).Groupable().EnableCustomBinding(true)
.AutoBind(true))
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->

<div class="modal fade bs-example-modal-lg" id="ReportsModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" id="partialContentDialog" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="DocdownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <div class="btn btn-primary" id="openBlackline" style="display: none;">See Blackline</div>
                    <div class="btn btn-primary" id="closeBlackline" style="display:none">Hide Blackline</div>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" style="line-height: 25px;">
                <div class="row">
                    <div id="partialContent"></div>
                    
                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="UpdatedExcelModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="UpdatedExcelDownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseUpdatedExcel()">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" style="line-height:25px; height:100%;">
                <div class="col-sm-12 clearfix">
                    <div id="UpdatedExcelPartialContent" class="clearfix">

                    </div>
                </div>
                <div class="clearfix">
                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="ExcelModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="ExcelAssignedDownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseChangedExcel()">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" style="line-height:25px; height:100%;">
                <div class="col-sm-12 clearfix">
                    <div id="ExcelPartialContent" class="clearfix">

                    </div>
                </div>
                <div class="clearfix">
                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="ChangedExcelModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="ChangedExcelDownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseChangedExcel()">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="ChangedExcelPartialContent" style="line-height:25px;">
                <div>

                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade" id="CommentHistoryModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Comment History</h4>
            </div>
            <div class="modal-body">
                <div class="table-responsive bluetheme mtp15" id="partialContentComment">

                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="UploadedDocumentModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="UploadedDocumentDownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseUploadedDoc()">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="UploadedPartialContent" style="line-height:25px;">
                <div>

                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>
<div class="modal fade" id="AllSlidesModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">View Document</h4>
            </div>
            <div class="modal-body">
                <div class="clearfix">
                    <a class="lightblue-btn btnspace" id="downloadLink"><i class="fa fa-download" aria-hidden="true"></i> Download</a>
                </div>
                <div class="table-responsive bluetheme mtp15">

                    <table class="table table-bordered">

                        <tr>
                            <td>
                                <div class="aniimated-thumbnials" id="divOriginalSlide">

                                </div>
                            </td>
                        </tr>
                    </table>

                </div>

            </div>

        </div>
    </div>
</div>
<div class="modal fade bs-example-modal-lg" id="AllTaskSlidesModel" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">

        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="downloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Download Original File"></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true" onclick="CloseTaskSlides()">&times;</button>
                </div>

                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().ListView<WordAutomationDemo.Models.AssignmentModel>()
.Name("listTaskView")
.TagName("div")
.ClientTemplateId("template")

.DataSource(dataSource =>
{
dataSource.Read(read => read.Action("GetAllTaskSlides", "Home").Data("AllTaskSlidesParamas"));
}).HtmlAttributes(new { style = "max-height:250px;overflow-y:auto" }))
                    <div class="clearfix"></div>
                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="ApproveModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to approve this task? </span></h4>
            </div>

            <div class="modal-body" id="partialContent">
                <div class="clearfix">
                    @Html.TextAreaFor(x => x.Remarks, new { @placeholder = "Remarks (Optional)", @class = "form-control col-lg-12" })

                </div>
            </div>
            <div class="modal-footer" id="btnSubmitAccept">
                <button type="button" class="btn btn-primary pull-right" style="width:200px" onclick="ApproveTask(this);" id="@Model.DocumentName">Approve</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="SlidesLinksModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" style="margin-bottom: 400px;" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">View Slides</h4>
            </div>
            <div class="modal-body" id="SlidesLinks">

            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="PagesLinksModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">View Pages</h4>
            </div>
            <div class="modal-body" id="PagesLinks">

            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="DeclineModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to decline this task ? </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div class="clearfix">
                    @Html.TextAreaFor(x => x.Remarks2, new { @placeholder = "Remarks (Optional)", @class = "form-control col-lg-6" })
                </div>

                <input type="hidden" name="DocType" value=" " id="DocType" />
                <input type="hidden" name="AssgnID" value=" " id="AssgnID" />
                <div class="modal-footer declineFooter" id="btnSubmitDecline">
                    <button type="button" class="btn btn-danger pull-right" style="width:200px" onclick="DeclineTask(this);" id="@Model.DocumentName">Decline</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ReassignModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to Reassign this task ? </span></h4>
            </div>
            <div class="modal-body" id="partialContent">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label>Due Date</label>
                            <div class="input-group data" id="DueDate">
                                @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control" })
                                <span class="input-group-addon btn-primary"> <i class="fa fa-calendar" aria-hidden="true"></i> </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="form-group multiselectbox">
                            <label for="projectDocuments">Assign To</label>
                            @*@Html.DropDownListFor(x => x.UserID, Model.UserListItems, " - Select Assign To - ", new { @class = "form-control col-md-5 " })*@
                            <div id="grid"></div>
                        </div>
                    </div>
                </div>
                <input type="hidden" name="DocType" value=" " id="DocType" />
                <input type="hidden" name="AssgnID" value=" " id="AssgnID" />
                <div class="clearfix mtp10" id="btnSubmitReassign">
                    <button type="button" class="btn btn-danger pull-right" style="width:200px" id="@Model.DocumentName">Reassign</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="BulkDeclineModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to decline selected task(s) ? </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div class="clearfix">
                    @Html.TextAreaFor(x => x.BulkDeclineRemarks, new { @placeholder = "Remarks (Optional)", @class = "form-control col-lg-6" })
                </div>
                @*<input type="hidden" name="DocType" value=" " id="DocType" />
                    <input type="hidden" name="AssgnID" value=" " id="AssgnID" />*@
                <div class="modal-footer declineFooter" id="divSubmitBulkDecline">
                    <button type="button" class="btn btn-danger pull-right" style="width:200px" onclick="BulkDecline();" id="btnDeclineBulkTasks" name="btnDeclineBulkTasks">Decline Selected Task(s)</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="UploadedDocModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="z-index:9999;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Documents </span></h4>
            </div>

            <div class="modal-body" id="UploadedDoc">

            </div>

        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="DeclineSlideModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to decline this PPT ? </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div class="clearfix">
                    @Html.TextAreaFor(x => x.DeclinePPTReason, new { @placeholder = "Remarks (Optional)", @class = "form-control col-lg-6" })
                </div>

                <input type="hidden" name="hdnAssignedPPTSlideID" value=" " id="hdnAssignedPPTSlideID" />
                <input type="hidden" name="hdnAssgnSlideID" value=" " id="hdnAssgnSlideID" />
                <div class="modal-footer declineFooter" id="btnSubmitDecline">
                    <button type="button" class="btn btn-danger pull-right" style="width:200px" onclick="DeclineSlide(this);" id="@Model.DocumentName">Decline</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="DeclinePageModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to decline this PPT ? </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div class="clearfix">
                    @Html.TextAreaFor(x => x.DeclinePPTReason, new { @placeholder = "Remarks (Optional)", @class = "form-control col-lg-6" })
                </div>

                <input type="hidden" name="hdnAssignedPageNumber" value=" " id="hdnAssignedPageNumber" />
                <div class="modal-footer declineFooter" id="btnSubmitDecline">
                    <button type="button" class="btn btn-danger pull-right" style="width:200px" onclick="DeclinePage(this);" id="@Model.OriginalDocumentName">Decline</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="DeclineSheetModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">Do you want to decline this Sheet ? </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div class="clearfix">
                    @Html.TextAreaFor(x => x.DeclineSheetReason, new { @placeholder = "Remarks (Optional)", @class = "form-control col-lg-6" })
                </div>

                <input type="hidden" name="hdnAssignedExcelSheetID" value=" " id="hdnAssignedExcelSheetID" />
                <input type="hidden" name="hdnAssignedSheetID" value=" " id="hdnAssignedSheetID" />
                <div class="modal-footer declineFooter" id="btnSubmitDecline">
                    <button type="button" class="btn btn-danger pull-right" style="width:200px" onclick="DeclineSheet(this);" id="@Model.OriginalDocumentName">Decline</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="popup" data-backdrop="static" style="z-index:11000;display:none;">Popup</div>
<div id="spinner" style="display:none;">
    <img src=@Url.Content("~/CSS/images/bx_loader.gif") class="ajax-loader loading-spinner">
</div>
<div id="modalConfirmYesNo" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 id="lblTitleConfirmYesNo" class="modal-title">Confirmation</h4>
            </div>
            <div class="modal-body">
                <p id="lblMsgConfirmYesNo"></p>
            </div>
            <div class="modal-footer">
                <button id="btnYesConfirmYesNo" type="button" class="btn btn-primary">Yes</button>
                <button id="btnNoConfirmYesNo" type="button" class="btn btn-default">No</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade bs-example-modal-lg" id="pageSnippetModal" tabindex="1000" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="overflow:auto;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="pull-right">
                    <a id="DocdownloadLink" href="#"><i class="glyphicon glyphicon-download-alt " title="Click to Download "></i></a>
                    &nbsp;&nbsp;
                    <button type="button" title="Close" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <h4 class="modal-title" id="myModalLabel">  <span id="contentType">View Document </span></h4>
            </div>
            <div class="modal-body" id="partialContent" style="line-height:25px;">
                <div>

                </div>
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>
<script type="text/x-kendo-tmpl" id="template">
    <div class="pull-left" style="padding:10px;overflow:auto;max-height:250px"> #=ThumbnailLink#</div>
</script>
<script id="template1" type="text/x-kendo-template">
    <div class="toolbar">

        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                    <input type="text" class="form-control" id='searchBox' placeholder="Search for...">
                    @*<span class="input-group-btn">
                            <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                        </span>*@
                </div>
            </div>
        </div>
    </div>
</script>

<script>

    $(document).ready(function () {
        $(".k-grouping-header").remove();
    });
    $("#ReportsModal").on('shown.bs.modal', function () {
        //$('#OrignalDoc_R_TC_TPTCL_MinBtn').click();
        //$('#Snippet_R_TC_TPTCL_MinBtn').click();
        //$('#OrignalDoc_R_TC_WC').css("display", "none");
        //$('#OrignalDoc_R_T0').css("display", "none");

        //$('#Snippet_R_TC_WC').css("display", "none");
        //$('#Snippet_R_T0').css("display", "none");

    });

    $("#ExcelModal").on('shown.bs.modal', function () {
    });

    function passData() {
        return {
            userid: '@WordAutomationDemo.Helpers.CurrentUserSession.UserID',
        };
    }

    function actionFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("MyTaskGrid_Actions", "Home")"
                }
            },
            optionLabel: "--Select Action--"
        });
    }

    function ApproveTask(e, AssigneID, docType) {
        //$('#' + e.id).attr('disabled', 'disabled');
        var $confirm = $("#modalConfirmYesNo");
        $confirm.modal('show');
        $("#lblTitleConfirmYesNo").html("Triyosoft");
        $("#lblMsgConfirmYesNo").html("Do you want to approve this task?");
        $("#btnYesConfirmYesNo").off('click').click(function () {
            $('.ApproveButton').attr('disabled', 'disabled');
            var actionId = '@((int)WordAutomationDemo.Common.Global.Action.Approved)';
            var ppt = '@((int)WordAutomationDemo.Common.Global.DocumentType.Ppt)';
            var excel = '@((int)WordAutomationDemo.Common.Global.DocumentType.Xls)';

            //var doc = $("#DocName").val();
            var doc = e.id;
            var remarks = $("#Remarks").val();

            if (docType == ppt) {
                $.get('@Url.Action("ApprovePPT", "Home")', { document: doc, actionId: actionId, Remarks: remarks, AssignID: AssigneID }, function (resp) {
                    if (resp) {
                        $('#ApproveModal').modal('hide');
                        $("#Message").html("Task has been approved successfully")
                        $("#Message").show().focus();
                        setTimeout(function () {
                            $("#Message").hide();
                        }, 5000);
                        $("#taskgrid").data("kendoGrid").dataSource.read();
                    }
                });

            }
            else if (docType == excel) {
                $.get('@Url.Action("ApproveExcel", "Home")', { document: doc, actionId: actionId, Remarks: remarks, AssignID: AssigneID }, function (resp) {
                    if (resp) {
                        $('#ApproveModal').modal('hide');
                        $("#Message").html("Task has been approved successfully")
                        $("#Message").show().focus();
                        setTimeout(function () {
                            $("#Message").hide();
                        }, 5000);
                        $("#taskgrid").data("kendoGrid").dataSource.read();
                    }
                });

            }
            if (docType == 0) {
                $.get('@Url.Action("UpdateTask", "Home")', { document: doc, actionId: actionId, Remarks: "", DeclineReason: "", DocType: 0, AssignID: AssigneID }, function (resp) {
                    if (resp) {
                        $('#ApproveModal').modal('hide');
                        $("#Message").html("Task has been approved successfully")
                        $("#Message").show().focus();
                        setTimeout(function () {
                            $("#Message").hide();
                        }, 5000);
                        $("#taskgrid").data("kendoGrid").dataSource.read();
                    }
                });
            }
            else {
                $.get('@Url.Action("HasAssignedPages","Home")',
                    { AssignmentID: AssigneID },
                    function(result) {
                        if (result) {
                            $.get('@Url.Action("ApprovePages", "Home")', { doc: doc, Remarks: remarks, assignmentID: AssigneID }, function (resp) {
                                if (resp) {
                                    $('#ApproveModal').modal('hide');
                                    $("#Message").html("Task has been approved successfully");
                                    $("#Message").show().focus();
                                    setTimeout(function () {
                                        $("#Message").hide();
                                    }, 5000);
                                    $("#taskgrid").data("kendoGrid").dataSource.read();
                                }
                            });
                        } else {
                            $.get('@Url.Action("UpdateTask", "Home")', { document: doc, actionId: actionId, Remarks: remarks, AssignID: AssigneID }, function (resp) {
                                if (resp) {
                                    $('#ApproveModal').modal('hide');
                                    $("#Message").html("Task has been approved successfully");
                                    $("#Message").show().focus();
                                    setTimeout(function () {
                                        $("#Message").hide();
                                    }, 5000);
                                    $("#taskgrid").data("kendoGrid").dataSource.read();
                                }
                            });
                        }
                    });

            }
            $confirm.modal("hide");
        });
        $("#btnNoConfirmYesNo").off('click').click(function () {

            $confirm.modal("hide");
        });

        //=================================================


    }
    function ApprovePage(e, PageNumber, AssignmentID, ticks) {
        var $confirm = $("#modalConfirmYesNo");
        $confirm.modal('show');
        $("#lblTitleConfirmYesNo").html("Triyosoft");
        $("#lblMsgConfirmYesNo").html("Do you want to approve this page?");
        $("#btnYesConfirmYesNo").off('click').click(function() {
            $('.ApproveButton').attr('disabled', 'disabled');
            $("#loading").show();
            $.ajax({
                type: "POST",
                url: SiteUrl + "Home/ApprovePage",
                data: { pageNumber: PageNumber, assignmentID: AssignmentID, docName: e.id , ticks: ticks},
                cache: false,
                async: true,
                success: function(data) {
                    if (data) {
                        $('#PagesLinksModal').modal('hide');
                        $('#taskgrid').data("kendoGrid").dataSource.read();
                        $("#ApproveModal").modal('hide');
                        $("#Message").html("Task has been approved successfully");
                        $("#Message").show().focus();
                        setTimeout(function() {
                            $("#Message").hide();
                        },5000);
                    }
                }
            });
            $confirm.modal("hide");
        });
    }

    function ApproveSlide(e, AssignedPPTSlideID, AssigneID) {
        //$('#' + e.id).attr('disabled', 'disabled');
        //if (confirm("Do you want to approve this slide ?")) {
        var $confirm = $("#modalConfirmYesNo");
        $confirm.modal('show');
        $("#lblTitleConfirmYesNo").html("Triyosoft");
        $("#lblMsgConfirmYesNo").html("Do you want to approve this slide?");
        $("#btnYesConfirmYesNo").off('click').click(function () {

            $('.ApproveButton').attr('disabled', 'disabled');
            $("#loading").show();
            $.ajax({
                type: "POST",
                url: SiteUrl + "Home/ApproveSlide",
                data: { assignedPPTSlideID: AssignedPPTSlideID, assignID: AssigneID, docName: e.id },
                cache: false,
                async: true,
                success: function (data) {
                    if (data) {
                        $('#SlidesLinksModal').modal('hide');
                        $("#taskgrid").data("kendoGrid").dataSource.read();
                        $('#ApproveModal').modal('hide');
                        $("#Message").html("Task has been approved successfully")
                        $("#Message").show().focus();
                        setTimeout(function () {
                            $("#Message").hide();
                        }, 5000);
                    }
                },
                complete: function (data) {
                    $("#loading").hide();
                }
            });
            //}
            $confirm.modal("hide");
        });
        $("#btnNoConfirmYesNo").off('click').click(function () {

            $confirm.modal("hide");
        });

    }

    function DeclineSlide(e) {
        $("#loading").show();
        $.ajax({
            type: "POST",
            url: SiteUrl + "Home/DeclineSlide",
            data: { assignedPPTSlideID: $("#hdnAssignedPPTSlideID").val(), assignID: $("#hdnAssgnSlideID").val(), docName: e.id, remarks: $("#DeclinePPTReason").val() },
            cache: false,
            async: true,
            success: function (data) {
                if (data) {
                    $('#DeclineSlideModal').modal('hide');
                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $("#Message").html("Slide has been declined successfully");
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            },
            complete: function (data) {
                $("#loading").hide();
            }
        });
    }

    function DeclinePage(e, pageNumber, assignmentID) {
        $("#loading").show();
        $("#DeclinePageModal").modal("show");
        //var remarks =
        $.ajax({
            type: "POST",
            url: SiteUrl + "Home/DeclinePage",
            data: { pageNumber: pageNumber, assignmentID: assignmentID, remarks: $("#DeclinePPTReason").val() },
            cache: false,
            async: true,
            success: function(data) {
                if (data) {
                    $('#DeclinePageModal').modal('hide');
                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $("#Message").html("Page has been declined successfully")
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            },
            complete: function (data) {
                $("#loading").hide();
            }
        });
    }

    function DeclineSheet(e) {
        $("#loading").show();
        $.ajax({
            type: "POST",
            url: SiteUrl + "Home/DeclineSheet",
            data: { assignedExeclSheetID: $("#hdnAssignedExcelSheetID").val(), assignID: $("#hdnAssignedSheetID").val(), docName: $("#DocName").val(), remarks: $("#DeclineSheetReason").val() },
            cache: false,
            async: true,
            success: function (data) {
                if (data) {
                    $('#DeclineSheetModal').modal('hide');
                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $("#Message").html("Sheet has been decline successfully")
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            },
            complete: function (data) {
                $("#loading").hide();
            }
        });
    }

    function openPopupForApprove(e) {
        $('#' + e.id).removeAttr('disabled', 'disabled');
        $("#DocName").val(e.id);
        $('#ApproveModal').modal('show');
    }

    function openPopupForDecline(e, id, type) {
        $('#' + e.id).removeAttr('disabled', 'disabled');
        $("#DocName").val(e.id);
        $("#DocType").val(type);
        $("#AssgnID").val(id);
        $('#DeclineModal').modal('show');
        $("#Remarks2").val("");
    }

    function openPopupForDeclineSlide(e, assignedPPTSlideID, assignmentID) {
        $('#' + e.id).removeAttr('disabled', 'disabled');
        $("#DocName").val(e.id);
        $("#hdnAssignedPPTSlideID").val(assignedPPTSlideID);
        $("#hdnAssgnSlideID").val(assignmentID);
        $('#SlidesLinksModal').modal('hide');
        $('#DeclineSlideModal').modal('show');
        $("#DeclinePPTReason").val("");
    }

    function openPopupForDeclineSheet(e, assignedExcelSheetID, assignmentID) {
        $('#' + e.id).removeAttr('disabled', 'disabled');
        $("#DocName").val(e.id);
        $("#hdnAssignedExcelSheetID").val(assignedExcelSheetID);
        $("#hdnAssignedSheetID").val(assignmentID);
        $('#SheetsLinksModal').modal('hide');
        $('#DeclineSheetModal').modal('show');
        $("#DeclineSheetReason").val("");
    }

    function ApproveSheet(e, AssignedExcelSheetID, AssigneID) {
        //$('#' + e.id).attr('disabled', 'disabled');
        //if (confirm("Do you want to approve this sheet ?")) {
        var $confirm = $("#modalConfirmYesNo");
        $confirm.modal('show');
        $("#lblTitleConfirmYesNo").html("Triyosoft");
        $("#lblMsgConfirmYesNo").html("Do you want to approve this sheet?");
        $("#btnYesConfirmYesNo").off('click').click(function () {

            $('.ApproveButton').attr('disabled', 'disabled');
            $("#loading").show();
            $.ajax({
                type: "POST",
                url: SiteUrl + "Home/ApproveSheet",
                data: { assignedExcelSheetID: AssignedExcelSheetID, assignID: AssigneID, docName: e.id },
                cache: false,
                async: true,
                success: function (data) {
                    if (data) {
                        $('#SheetsLinksModal').modal('hide');
                        $("#taskgrid").data("kendoGrid").dataSource.read();
                        $('#ApproveModal').modal('hide');
                        $("#Message").html("Task has been approved successfully")
                        $("#Message").show().focus();
                        setTimeout(function () {
                            $("#Message").hide();
                        }, 5000);
                    }
                },
                complete: function (data) {
                    $("#loading").hide();
                }
            });
            $confirm.modal("hide");
        });
        $("#btnNoConfirmYesNo").off('click').click(function () {

            $confirm.modal("hide");
        });

    }

    function setProjectGrid(result) {
        if (result.length > 0) {
            $('#grid').html('');
            var grid = $('#grid').kendoGrid({
                dataSource: {
                    data: result
                },
                toolbar: [
                    { template: kendo.template($("#template1").html()) }
                ],
                groupable: false,
                sortable: false,
                pageable: false,
                scrollable: true,
                //height: "400px",
                columns: [{
                    template: "<div class='inlinetitle'>" +
                    "<div class='inlineuserinfo' style='text-overflow: ellipsis;'><h3>#: FullName #</h3><p>#: Company#</p></div></div>",
                    field: "FullName",
                    title: "Team Member"
                },
                {
                    field: "Permission",
                    title: "Permission",
                    template: "<select id='permission-#=UserId#' onchange='selectUser(#=UserId#);'>" +
                        "<option value='-1'>Select a permission</option>" +
                        "<option value='1' #if(CanEdit){ #selected# } #>Edit</option>" +
                        "<option value='2' #if(CanPublish){ #selected# } #>Publish</option>" +
                        "<option value='3' #if(CanApprove){ #selected# } #>Approve</option>" +
                        "<option value='4' #if(CanView){ #selected# } #>View</option></select>"
                }
                ]
            }).data("kendoGrid");

            $("#grid .k-grid-header").css('display', 'none');

            $("#searchBox").keyup(function () {
                var searchValue = $('#searchBox').val();
                var grid = $("#grid").data("kendoGrid");
                if (searchValue) {
                    grid.dataSource.filter({ field: "FullName", operator: "contains", value: searchValue });
                } else {
                    grid.dataSource.filter({});
                }

            });

        } else {
            var msg = getProjectId > 0 ? "Add a team member" : "Select a project to choose team members";
            $('#grid').html('<div class="jumbotron center data-hint" style="min-height:190px;">' + msg + '</div>');
            $("#UserID option").remove();
            $("#subtaskUserID").remove();
            $("#UserID").append('<option value=""> - Select Assign To - </option>');
            $("#subtaskUserID").append('<option value=""> - Select Assign To - </option>');
        }
    }

    var selectedUsers = [];

    function selectUser(userID) {
        var selected = $("#permission-" + userID).find(":selected").val();
        var CanEdit = selected == 1;
        var CanPublish = selected == 2;
        var CanApprove = selected == 3;
        var CanView = selected == 4;
        var none = selected == -1;

        var newSelectedUser = {
            userID: userID,
            canEdit: CanEdit,
            CanApprove: CanApprove,
            CanPublish: CanPublish
        };

        console.log(userID, CanEdit, CanPublish, CanApprove, CanView);

        selectedUsers = selectedUsers.filter(function (su) {
            return su.userID !== userID;
        });

        if (!none) {
            selectedUsers.push(newSelectedUser);
        }

        console.log(selectedUsers);
        $('input:hidden[name=AssignmentMemberList]').val(JSON.stringify(selectedUsers));
    }

    function openPopupForReassign(e, id, type, projectID, userID, dueDate) {
        $('#' + e.id).removeAttr('disabled', 'disabled');
        $("#DocName").val(e.id);
        $("#DocType").val(type);
        $("#AssgnID").val(id);
        $("#ReassignRemarks").val("");
        $('#UserID').val('');
        $("#ReassignModal #DueDate").datetimepicker({
            format: '@WordAutomationDemo.Helpers.CurrentUserSession.User.DTformat'
            //format: 'MM/DD/YYYY',
            //viewMode: 'days',
            //useCurrent: false,
            //allowInputToggle: true,
            //minDate: moment().add(-1, 'd').toDate(),
            //defaultDate: dueDate,
            //date: new Date(dueDate)
        });
        $("#ReassignModal #DueDate").on("dp.change", function (e) {
            $(this).blur();
        });
        $("#ReassignModal #DueDate").val(dueDate)
        $.get('@Url.Action("GetMembersByProjectForReassign", "Home")', { ProjectID: projectID, AssignmentID: id }, function (result) {
            console.log(result);
            setProjectGrid(result);

        });
        $('#ReassignModal').modal('show');
        $("#btnSubmitReassign").on("click",
            function(e) {
                ReassignTask(e, $('#AssgnID').val(), $('#DocType').val(), $('#DueDate').val());
            });
    }

    function DeclineTask(e) {
        $(e).attr('disabled', 'disabled');
        var AssigneID = $('#AssgnID').val();
        var docType = $('#DocType').val();
        var actionId = '@((int)WordAutomationDemo.Common.Global.Action.Declined)';
        var ppt = '@((int)WordAutomationDemo.Common.Global.DocumentType.Ppt)';
        var excel = '@((int)WordAutomationDemo.Common.Global.DocumentType.Xls)';

        var doc = $("#DocName").val();
        var remarks = $("#Remarks2").val();

        if (docType == ppt) {
            $.get('@Url.Action("DeclinePPT", "Home")', { document: doc, actionId: actionId, Remarks: remarks, AssignID: AssigneID }, function (resp) {
                if (resp) {
                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $('#DeclineModal').modal('hide');
                    $("#Message").html("Task has been declined successfully")
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            });
        } else if (docType == excel) {
            $.get('@Url.Action("DeclineExcel", "Home")', { document: doc, actionId: actionId, Remarks: remarks, AssignID: AssigneID }, function (resp) {
                if (resp) {
                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $('#DeclineModal').modal('hide');
                    $("#Message").html("Task has been declined successfully")
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            });
        } else if (docType == 0) {
            $.get('@Url.Action("UpdateTask", "Home")', { document: doc, actionId: actionId, Remarks: "", DeclineReason: remarks, DocType: 0, AssignID: AssigneID }, function (resp) {
                if (resp) {
                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $('#DeclineModal').modal('hide');
                    $("#Message").html("Task has been declined successfully")
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            });
        } else {
            $.get('@Url.Action("UpdateTask", "Home")', { document: doc, actionId: actionId, Remarks: "", DeclineReason: remarks, AssignID: AssigneID }, function (resp) {
                if (resp) {
                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $('#DeclineModal').modal('hide');
                    $("#Message").html("Task has been declined successfully")
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);
                }
            });
        }
        $(e).removeAttr('disabled', 'disabled');
    }

    function ReassignTask(e, AssigneID, docType, dueDate) {
        $(e).attr('disabled', 'disabled');
        var actionId = '@((int)WordAutomationDemo.Common.Global.Action.Assigned)';
        var ppt = '@((int)WordAutomationDemo.Common.Global.DocumentType.Ppt)';
        var excel = '@((int)WordAutomationDemo.Common.Global.DocumentType.Xls)';

        var grid = $("#grid").data("kendoGrid");
        var selUsers = $(grid.tbody).find(":selected");
        for (var i = 0; i < selUsers.length; i++) {
            var selUser = selUsers[i];
            var userId = parseInt($(selUser).parent().attr("id").split("-")[1]);
            selectUser(userId);
        }

        var canEditCount = selectedUsers.filter(function (su) { return su.canEdit }).length;
        var canPublishCount = selectedUsers.filter(function (su) { return su.CanPublish }).length;
        //var canApproveCount = selectedUsers.filter(function (su) { return su.CanApprove }).length;

        if ((canEditCount + canPublishCount) == 0) {
            alert("Please select at least one editor.");
            $(e).removeAttr('disabled', 'disabled');
            return;
        } else {
            var doc = $("#DocName").val();
            var remarks = $("#ReassignRemarks").val();
            if (docType == ppt) {
                $.get('@Url.Action("ReassignTaskPPT", "Home")', { document: doc, DeclineReason: remarks, AssignID: AssigneID, assignedTo: JSON.stringify(selectedUsers), dueDate: dueDate }, function (resp) {
                    if (resp) {
                        $("#taskgrid").data("kendoGrid").dataSource.read();
                        $('#ReassignModal').modal('hide');
                        $("#Message").html("Task has been reassigned successfully")
                        $("#Message").show().focus();
                        setTimeout(function () {
                            $("#Message").hide();
                        }, 5000);
                    }
                });

            }
            else {
                $.get('@Url.Action("ReassignTask", "Home")', { document: doc, DeclineReason: remarks, AssignID: AssigneID, assignedTo: JSON.stringify(selectedUsers), dueDate: dueDate }, function (resp) {
                    if (resp) {
                        $("#taskgrid").data("kendoGrid").dataSource.read();
                        $('#ReassignModal').modal('hide');
                        $("#Message").html("Task has been reassigned successfully")
                        $("#Message").show().focus();
                        setTimeout(function () {
                            $("#Message").hide();
                        }, 5000);
                    }
                });
            }
            $(e).removeAttr('disabled', 'disabled');
        }

    }


    function EditContent(e, docType, AssignmentID) {
        var id = e.id;

        var ppt = '@((int)WordAutomationDemo.Common.Global.DocumentType.Ppt)';
        var word = '@((int)WordAutomationDemo.Common.Global.DocumentType.Word)';
        var excel = '@((int)WordAutomationDemo.Common.Global.DocumentType.Xls)';
        if (ppt == docType) {
            window.location.href = SiteUrl + 'Home/EditPPT/' + id;
        }
        else if (excel == docType) {
            window.location.href = SiteUrl + 'Home/EditExcel/' + id;
        }
        else if (word == docType) {
            $.get('@Url.Action("HasAssignedPages","Home")',
                { AssignmentID: AssignmentID },
                function(result) {
                    if (result) {
                        window.location.href = SiteUrl + 'Home/EditPageContent/' + id;
                    } else {
                        window.location.href = SiteUrl + 'Home/EditContent/' + id;
                    }
                });
        }
        else {
            window.location.href = SiteUrl + 'Home/EditTask/' + id;
        }
    }


    function OpenSnippet(e,AssignmentID) {
        //var name = "Documents/" + e.id;
        var name = e.id;
        var OriginalDocumentName = $(e).attr("data-originalFile");
        CloseBlackline(AssignmentID);
        $.get('@Url.Action("HasAssignedPages","Home")',
            { AssignmentID: AssignmentID },
            function(result) {
                if (result) {
                    OpenChangedWordDownloadView(OriginalDocumentName, AssignmentID);
                } else {
                    $("#DocdownloadLink").attr("href", '@DocPathTemp' + name)
                    $("#partialContent")
                        .html(
                            '<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
                    $('#ReportsModal').modal('show');
                    $('#openBlackline').hide();
                    $('#closeBlackline').hide();
                    $.get('@Url.Action("LoadSnippet", "Home")',
                        { name: name, userid: 1, IsReadOnly: true },
                        function(partialView) {
                            $("#partialContent").html(partialView);
                            $('#Snippet_R_TC_TPTCL_MinBtn').click();
                        });
                }
            });

    }

    function OpenBlackline(OriginalDocumentName,AssignmentID) {
        console.log("ORIG", OriginalDocumentName);
        //CloseBlackline();
        $.get('@Url.Action("GetBlackLine","Home")',
            { filename: OriginalDocumentName },
            function (result) {
                if (result) {
                    console.log(result);
                    var name = OriginalDocumentName.split('.')[0];

                    $("#blacklinePreview").remove();
                    var iframe = '<iframe class="col-lg-6 blacklinePrev" id="blacklinePreview-'+AssignmentID+'" height="700" src="' + SiteUrl + '/ApplicationDocuments/Words/Blackline_' + name + '.pdf#zoom=80&page=1"></iframe>';
                    $(iframe).insertAfter("#partialContent");
                    $("#blacklinePreview").one(function() { console.log("testtest") });
                    $("#partialContent").addClass("col-lg-6");
                    $("#partialContentDialog").css("width", "auto");
                    $("#closeBlackline").show();
                    $("#openBlackline").hide();
                    //console.log(blacklinePath);
                } else {
                    alert("Original file not available.");
                }
            });
    }

    function CancelTask(e) {
        var assignmentId = $(e).attr('data-assign-id');
        var filename = $(e).attr('data-doc-file');
        var filetype = $(e).attr('data-doc-type');

        console.log(assignmentId, filename, filetype);
        $.ajax({
            type: "POST",
            url: SiteUrl + "Home/CancelTask",
            data: { AssignmentID: assignmentId, OriginalFilename: filename, DocType: filetype },
            success: function (data) {
                
                $("#taskgrid").data("kendoGrid").dataSource.read();
                $("#Message").html("Task has been cancelled successfully");
                $("#Message").show().focus();
                setTimeout(function () {
                    $("#Message").hide();
                }, 5000);
            }
        });
    }

    function CloseBlackline(AssignmentID) {
        $("#partialContent").removeClass("col-lg-6");
        $(".blacklinePrev").remove();
        //$("#blacklinePreview").attr("src", "");
        //$("#blacklinePreview").one(function () { console.log("testtest") });
        $("#partialContentDialog").css("width", "");
        $("#closeBlackline").hide();
        $("#openBlackline").show();
    }

    function OpenAssignedSnippet(e, AssignmentID) {
        var name = "";
        if (e.id.indexOf('_') != -1) {
            name = "Copy" + e.id;
        } else {
            name = "Copy_" + e.id;
        }
        var OriginalDocumentName = $(e).attr("data-originalFile");
        CloseBlackline(AssignmentID);
        $.get('@Url.Action("HasAssignedPages","Home")',
            { AssignmentID: AssignmentID },
            function(result) {
                if (result) {
                    OpenAssignedWordDownloadView(OriginalDocumentName, AssignmentID,true);
                } else {
                    $("#DocdownloadLink").attr("href", '@DocPathTemp' + name)
                    $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
                    $('#ReportsModal').modal('show');
                    $('#openBlackline').hide();
                    $('#closeBlackline').hide();
                    $.get('@Url.Action("LoadSnippet", "Home")',
                        { name: name, userid: 1, IsReadOnly: true },
                        function (partialView) {
                            $("#partialContent").html(partialView);
                            $('#Snippet_R_TC_TPTCL_MinBtn').click();
                        });
                }
            });

    }

    @*function OpenSnippet(e, name) {
        $("#DocdownloadLink").attr("href", '@DocPathTemp' + name)
        $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#ReportsModal').modal('show');
        $.get('@Url.Action("LoadSnippet", "Home")', { name: name, userid: 1, IsReadOnly: true }, function (partialView) {
            $("#partialContent").html(partialView);
            $('#Snippet_R_TC_TPTCL_MinBtn').click();
        });
    }*@
    function OpenUploadedCopy(e, AssignmentID) {
        var name = e.id;

        $("#DocdownloadLink").attr("href", "#");

        $("#DocdownloadLink").click(function () {
            window.location = SiteUrl + '/Home/DownloadOriginalDoc?filename=' + name;
        });

        $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#ReportsModal').modal('show');

        CloseBlackline(AssignmentID);
        $("#openBlackline").unbind("click");
        $('#openBlackline').on("click", function () {
            OpenBlackline(name, AssignmentID);
        });

        $("#closeBlackline").unbind("click");
        $('#closeBlackline').on("click", function () {
            CloseBlackline(AssignmentID);
        });

        $.get('@Url.Action("LoadOrginalDoc", "Home")', { name: name, userid: 1, IsReadOnly: true }, function (partialView) {
            $("#partialContent").html(partialView);
            $('.dxr-minBtn').click();

            //$("#blacklinePreview").hide();
            //$('#Snippet_R_TC_TPTCL_MinBtn').click();
            
        });

        
    }

    function OpenUploadedExcelCopy(e) {
        var name = e.id;
        $("#UpdatedExcelDownloadLink").attr("href", '@ExcelPath' + name)
        $("#UpdatedExcelPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#SheetsLinksModal').modal('hide');
        $('#UpdatedExcelModal').modal('show');
        $("#UpdatedExcelPartialContent").html("");
        setTimeout(function () {
            $.get('@Url.Action("LoadOriginalExcel", "Home")', { OriginalDocumentName: e.id, userid: 1, IsReadOnly: true }, function (partialView) {
                $("#UpdatedExcelPartialContent").html(partialView);
                $('.dxr-minBtn').click();
                $('#Snippet_R_TC_TPTCL_MinBtn').click();
            });
        }, 1000);
    }

    function spreadsheet_SelectionChanged(s, e) {
    }

    function OpenOriginalSnippet(e) {
        var name = e.id;
        $("#DocdownloadLink").attr("href", '@DocPathTemp' + name)
        $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#ReportsModal').modal('show');
        $('#openBlackline').show();
        $.get('@Url.Action("LoadOrginalDoc", "Home")', { name: name, userid: 1, IsReadOnly: true }, function (partialView) {
            $("#partialContent").html(partialView);
        });
        $('.dxr-minBtn').click();
        //$('#OrignalDoc_R_TC_TPTCL_MinBtn').click();
    }

    function AllSlidesParamas() {
        return {
            FileName: $("#MasterDocName").val(),
        };
    }

    function AllTaskSlidesParamas() {
        return {
            assignedDocsID: $("#AssignDocID").val(),
        };
    }

    function GetPPTSlides(e) {
        var name = e.id;
        $("#downloadLink").attr("href", '@PPTPath' + "/" + name)
        $("#MasterDocName").val(name);

        var name = e.id
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $.get('@Url.Action("GetAllSlides", "Home")', { FileName: name }, function (result) {

            var strhtml = '';
            if (result.length > 0) {
                $.each(result, function (key, value) {
                    strhtml += value["ThumbnailLink"];
                });
                $("#divOriginalSlide").html(strhtml);
                $("[data-toggle=popover]").each(function (i, obj) {
                    $(this).popover({
                        html: true,
                        content: function () {
                            var id = $(this).attr('id')
                            return $('#popover-content-' + id).html();
                        }
                    });

                });
                $(".aniimated-thumbnials").lightGallery({
                    thumbnail: true,
                    animateThumb: false,
                    loop: false,
                    enableSwipe: true

                });
            }
            else {
                $("#divOriginalSlide").html('<span class="center">No Slides found.</span>');
            }

            $('#AllSlidesModel').modal('show');
        });
    }

    function GetExcelSheets(e) {
        var name = e.id;
        $("#downloadLink").attr("href", '@PPTPath' + "/" + name)
        $("#MasterDocName").val(name);

        var name = e.id
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $.get('@Url.Action("GetAllSlides", "Home")', { FileName: name }, function (result) {

            var strhtml = '';
            if (result.length > 0) {
                $.each(result, function (key, value) {
                    strhtml += value["ThumbnailLink"];
                });
                $("#divOriginalSlide").html(strhtml);
                $("[data-toggle=popover]").each(function (i, obj) {
                    $(this).popover({
                        html: true,
                        content: function () {
                            var id = $(this).attr('id')
                            return $('#popover-content-' + id).html();
                        }
                    });

                });
                $(".aniimated-thumbnials").lightGallery({
                    thumbnail: true,
                    animateThumb: false,
                    loop: false,
                    enableSwipe: true

                });
            }
            else {
                $("#divOriginalSlide").html('<span class="center">No Slides found.</span>');
            }

            $('#AllSlidesModel').modal('show');
        });
    }

    function GetTaskPPTSlides(doc, assignDocID) {
        $("#downloadLink").attr("href", '@PPTPath' + "/" + assignDocID)
        $("#AssignDocID").val(assignDocID);
        $("#listTaskView").data("kendoListView").dataSource.read();
        $('#AllTaskSlidesModel').modal('show');
        $('#UploadedDocModal').modal('hide');
    }

    function OpenAssignedPPTDownloadView(e, assignmentID, assigned, assignToID) {
        var name = e.id
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $.get('@Url.Action("GetMySlides", "Home")', { FileName: name, userId: userId, getAssigned: assigned, AssignmentId: assignmentID }, function (result) {
            $.get('@Url.Action("UserCanApprove","Home")', { userId: userId, assignmentId: assignmentID }, function (canApprove) {

                var strhtml = '<div class="table-responsive bluetheme"><table class="table table-bordered">';
                if (result.length > 0) {
                    console.log(result);
                    if (!assigned) {

                        strhtml += '<thead>';
                        strhtml += '<th>File</th>';
                        strhtml += '<th>Assigned</th>';
                        strhtml += '<th>Changed</th>';
                        strhtml += '<th>Comments</th>';
                        strhtml += '<th>Action</th>';
                        strhtml += '</thead>';
                        strhtml += '<tbody>';
                    }
                    else {
                        strhtml += '<thead>';
                        strhtml += '<th>File</th>';
                        strhtml += '<th>Assigned</th>';
                        strhtml += '<th>Comments</th>';
                        strhtml += '</thead>';
                        strhtml += '<tbody>';
                    }
                    $.each(result, function (key, value) {

                        strhtml += '<tr>';
                        strhtml += '<td>' + value["SlideName"] + '</td>';
                        strhtml += value["ThumbnailLinkForOldSlide"];
                        if (!assigned) {
                            if (value["lstThumbnailLinkForOldSlide"].length > 0) {
                                strhtml += value["ThumbnailLink"];
                            } else {
                                strhtml += "<td>In Progress</td>"
                            }
                        }
                        strhtml += '<td>' + value["PPTRemarks"] + '</td>';
                        //if (userId != assignToID) {
                        if (!assigned) {

                        if (value["IsPPTApproved"] != null && value["IsPPTApproved"] == true) {
                            strhtml += '<td>Completed</td>';
                        }
                        else if (value["ReviewRequested"] != null && value["ReviewRequested"] && value["LockedByUserID"] != @CurrentUserSession.User.UserID){
                            strhtml += '<td class="popover-hide-xs"><a class="tableicon greenbg cursor" data-toggle="tooltip" data-placement="bottom" title="Approve" data-original-title="Approve" onclick="ApproveSlide(this,' + value["AssignedPPTSlideID"] + "," + assignmentID + ')" id="' + value["OriginalDocumentName"] + '"><i class="fa fa-thumbs-up" aria-hidden="true"></i></a> <a onclick="openPopupForDeclineSlide(this,' + value["AssignedPPTSlideID"] + "," + assignmentID + ')" id="' + value["OriginalDocumentName"] + '" class="tableicon redbg cursor" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Decline"><i class="fa fa-thumbs-down" aria-hidden="true"></i></a></td>';
                        }
                        else if (value["ReviewRequested"] != null && value["ReviewRequested"]){
                            strhtml += '<td class="popover-hide-xs">Waiting for approval.</td>';
                        }
                        else if (value["IsPublished"] != null && value["IsPublished"]){
                            strhtml += '<td class="popover-hide-xs">Published</td>';
                        }
                        else {
                            strhtml += '<td class="popover-hide-xs"></td>';
                        }
                        }
                        //}
                        //else {
                        //    strhtml += '<td></td>';
                        //}
                        strhtml += '</tr>';
                    });
                    strhtml += '</tbody></table>';
                    $("#SlidesLinks").html(strhtml);
                    $("[data-toggle=popover]").each(function (i, obj) {
                        $(this).popover({
                            html: true,
                            content: function () {
                                var id = $(this).attr('id')
                                return $('#popover-content-' + id).html();
                            }
                        });

                    });
                    $(".aniimated-thumbnials").lightGallery({
                        thumbnail: true,
                        animateThumb: false,
                        loop: false,
                        enableSwipe: true

                    });
                }
                else
                    $("#SlidesLinks").html('<span class="center">No Slides found.</span>');

                $('#SlidesLinksModal').modal('show');
            });
        });
    }

    function OpenChangedWordDownloadView(OriginalDocumentName, AssignmentID) {
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $.get('@Url.Action("GetChangedWordPages", "Home")', { FileName: OriginalDocumentName, AssignmentID: AssignmentID }, function (result) {
            $.get('@Url.Action("UserCanApprove","Home")', { userId: userId, assignmentId: AssignmentID }, function (canApprove) {
                console.log(result);
                var strhtml = '<div class="table-responsive bluetheme"><table class="table table-bordered">';
                if (Object.keys(result).length > 0) {
                    console.log(result);
                    var isMultipleTextSelection = result.filter(function (item) { return item.PageNumber == 0 }).length > 1;
                    strhtml += '<thead>';
                    if (!isMultipleTextSelection) {
                        strhtml += '<th>Page Number</th>';
                    }
                    strhtml += '<th>Assigned</th>';
                    strhtml += '<th>Changed</th>';
                    strhtml += '<th>Comments</th>';
                    strhtml += '<th>Action</th>';
                    strhtml += '</thead>';
                    strhtml += '<tbody>';

                    $.each(result,
                        function(key, value) {
                            //var value = result[key];
                            var assigned = value["IsAssigned"];
                            strhtml += '<tr>';
                            if (!isMultipleTextSelection) {
                                strhtml += '<td>' + value["PageNumber"] + '</td>';
                            }
                            var assignedThumbnailLink = value["ThumbnailLink"].replace("changed", "assigned");

                            //strhtml += "<td class='popover-hide-xs'><div class='aniimated-thumbnials'>" + "<a href='" + assignedThumbnailLink + "' data-toggle='popover' data-trigger='hover' data-placement='bottom' id='word" + value["PageNumber"] + "' class='gridthumb' data-original-title=''><img src='" + value["ThumbnailLink"] + "' class='img-responsive img-thumbnail'><div id='popover-content-word" + value["PageNumber"] + "' class='hide'><img src='" + assignedThumbnailLink + "' class='img-responsive'></div></a>" + '</div></td>';
                            strhtml +=
                                '<td><a style="cursor: pointer; " title="View" class="onlyicon bluecolor" data-toggle="modal" onclick="OpenPageSnippet(\'' +
                                value["Ticks"] +
                                '\',\'' +
                                OriginalDocumentName +
                                '\', ' +
                                AssignmentID +
                                ', ' +
                                value["PageNumber"] +
                                ',true)" data-originalfile="TRIYO_636535284460481536_636560233954016848.docx" id="_636560282303187778.docx"><i class="fa fa-file-word-o" aria-hidden="true"></i></a></td>';
                            //strhtml += "<td class='popover-hide-xs'><div class='aniimated-thumbnials'>" + "<a href='" + value["ThumbnailLink"] + "' data-toggle='popover' data-trigger='hover' data-placement='bottom' id='word" + value["PageNumber"] + "' class='gridthumb' data-original-title=''><img src='" + value["ThumbnailLink"] + "' class='img-responsive img-thumbnail'><div id='popover-content-word" + value["PageNumber"] + "' class='hide'><img src='" + value["ThumbnailLink"] + "' class='img-responsive'></div></a>" + '</div></td>';
                            strhtml +=
                                '<td><a style="cursor: pointer; " title="View" class="onlyicon bluecolor" data-toggle="modal" onclick="OpenPageSnippet(\'' +
                                value["Ticks"] +
                                '\',\'' +
                                OriginalDocumentName +
                                '\', ' +
                                AssignmentID +
                                ', ' +
                                value["PageNumber"] +
                                ',false)" data-originalfile="TRIYO_636535284460481536_636560233954016848.docx" id="_636560282303187778.docx"><i class="fa fa-file-word-o" aria-hidden="true"></i></a></td>';
                            strhtml += '<td></td>';

                            if (value["IsPublished"] != null && value["IsPublished"] == true) {
                                strhtml += '<td>Published</td>';
                            } else if (value["ReviewRequested"] != null &&
                                value["ReviewRequested"] &&
                                value["LockedByUserID"] != @CurrentUserSession.User.UserID) {
                                strhtml +=
                                    '<td class="popover-hide-xs"><a class="tableicon greenbg cursor" data-toggle="tooltip" data-placement="bottom" title="Approve" data-original-title="Approve" onclick="ApprovePage(this,' +
                                    value["PageNumber"] +
                                    "," +
                                    AssignmentID +
                                    ",\'" +
                                    value["Ticks"] +
                                    '\')" id="' +
                                    value["OriginalFile"] +
                                    '"><i class="fa fa-thumbs-up" aria-hidden="true"></i></a> <a onclick="DeclinePage(this,' +
                                    value["PageNumber"] +
                                    "," +
                                    AssignmentID +
                                    ')" id="' +
                                    value["OriginalFile"] +
                                    '" class="tableicon redbg cursor" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Decline"><i class="fa fa-thumbs-down" aria-hidden="true"></i></a></td>';
                            } else if (value["ReviewRequested"] != null && value["ReviewRequested"]) {
                                strhtml += '<td class="popover-hide-xs">Waiting for approval.</td>';
                            } else {
                                strhtml += '<td class="popover-hide-xs"></td>';
                            }

                            strhtml += '</tr>';
                        });

                    strhtml += '</tbody></table>';
                    //strhtml += '<button class="btn" data-toggle="modal" href="#pageSnippetModal">Launch modal</button>';
                    $("#PagesLinks").html(strhtml);
                    $("[data-toggle=popover]").each(function (i, obj) {
                        $(this).popover({
                            html: true,
                            content: function () {
                                var id = $(this).attr('id')
                                return $('#popover-content-' + id).html();
                            }
                        });

                    });
                    $(".aniimated-thumbnials").lightGallery({
                        thumbnail: true,
                        animateThumb: false,
                        loop: false,
                        enableSwipe: true

                    });
                }
                else
                    $("#PagesLinks").html('<span class="center">No Pages found.</span>');

                $('#PagesLinksModal').modal('show');
            });
        });
    }

    function OpenPageSnippet(ticks, originalDocumentName, assignmentID, pageNumber, isReadOnly) {
        //var OriginalDocumentName = $(e).attr("data-originalFile");
        var name = assignmentID + "-" + ticks + "-" + pageNumber + ".docx";
        console.log(name);
        $("#partialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#pageSnippetModal').modal();
        $.get('@Url.Action("LoadPageSnippet", "Home")',
            { name: name, userid: 1, IsReadOnly: isReadOnly, originalFile: originalDocumentName },
            function (partialView) {
                $("#pageSnippetModal #partialContent").html(partialView);

                //$('#Snippet_R_TC_TPTCL_MinBtn').click();
                //$('#Snippet_R_TC_TPTCL_MinBtn').click();
            });

    }
    function OpenAssignedWordDownloadView(name, assignmentID, assigned, assignToID) {
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $.get('@Url.Action("GetAssignedWordPages", "Home")', { FileName: name, AssignmentID: assignmentID }, function (result) {
            $.get('@Url.Action("UserCanApprove","Home")', { userId: userId, assignmentId: assignmentID }, function (canApprove) {

                var strhtml = '<div class="table-responsive bluetheme"><table class="table table-bordered">';
                if (result.length > 0) {
                    var isMultipleTextSelection = result.filter(function (item) { return item.PageNumber == 0 }).length > 1;
                    console.log(result);
                    if (!assigned) {

                        strhtml += '<thead>';
                        if (!isMultipleTextSelection) {
                            strhtml += '<th>Page Number</th>';
                        }
                        strhtml += '<th>Assigned</th>';
                        strhtml += '<th>Changed</th>';
                        strhtml += '<th>Comments</th>';
                        strhtml += '<th>Action</th>';
                        strhtml += '</thead>';
                        strhtml += '<tbody>';
                    }
                    else {
                        strhtml += '<thead>';
                        strhtml += '<th>Page Number</th>';
                        strhtml += '<th>Assigned</th>';
                        strhtml += '<th>Comments</th>';
                        strhtml += '</thead>';
                        strhtml += '<tbody>';
                    }

                    $.each(result, function (key, value) {

                        strhtml += '<tr>';
                        if (!isMultipleTextSelection) {
                            strhtml += '<td>' + value["PageNumber"] + '</td>';
                        }
                        //strhtml += "<td class='popover-hide-xs'><div class='aniimated-thumbnials'>" + "<a href='" + value["ThumbnailLink"] + "' data-toggle='popover' data-trigger='hover' data-placement='bottom' id='word" + value["PageNumber"] + "' class='gridthumb' data-original-title=''><img src='" + value["ThumbnailLink"] + "' class='img-responsive img-thumbnail'><div id='popover-content-word" + value["PageNumber"] + "' class='hide'><img src='" + value["ThumbnailLink"] + "' class='img-responsive'></div></a>" + '</div></td>';
                        strhtml += '<td><a style="cursor: pointer; " title="View" class="onlyicon bluecolor" data-toggle="modal" onclick="OpenPageSnippet(\'' + value["Ticks"] + '\',\'' + name + '\', ' + assignmentID + ', ' + value["PageNumber"] + ',true)" data-originalfile="TRIYO_636535284460481536_636560233954016848.docx" id="_636560282303187778.docx"><i class="fa fa-file-word-o" aria-hidden="true"></i></a></td>';
                        if (!assigned) {

                            strhtml += "<td class='popover-hide-xs'><div class='aniimated-thumbnials'>" + "<a href='" + value["ThumbnailLink"] + "' data-toggle='popover' data-trigger='hover' data-placement='bottom' id='word" + value["PageNumber"] + "' class='gridthumb' data-original-title=''><img src='" + value["ThumbnailLink"] + "' class='img-responsive img-thumbnail'><div id='popover-content-word" + value["PageNumber"] + "' class='hide'><img src='" + value["ThumbnailLink"] + "' class='img-responsive'></div></a>" + '</div></td>';
                        }
                        //strhtml += '<td>' + value["PPTRemarks"] + '</td>';
                        strhtml += '<td></td>';
                        //if (userId != assignToID) {
                        if (!assigned) {

                            if (value["IsPPTApproved"] != null && value["IsPPTApproved"] == true) {
                                strhtml += '<td>Completed</td>';
                            }
                            else if (value["ReviewRequested"] != null && value["ReviewRequested"] && value["LockedByUserID"] != @CurrentUserSession.User.UserID){
                                strhtml += '<td class="popover-hide-xs"><a class="tableicon greenbg cursor" data-toggle="tooltip" data-placement="bottom" title="Approve" data-original-title="Approve" onclick="ApprovePage(this,' + value["PageNumber"] + "," + assignmentID + ')" id="' + value["OriginalFile"] + '"><i class="fa fa-thumbs-up" aria-hidden="true"></i></a> <a onclick="openPopupForDeclineSlide(this,' + value["AssignedWordPageID"] + "," + assignmentID + ')" id="' + value["OriginalFile"] + '" class="tableicon redbg cursor" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Decline"><i class="fa fa-thumbs-down" aria-hidden="true"></i></a></td>';
                            }
                            else if (value["ReviewRequested"] != null && value["ReviewRequested"]){
                                strhtml += '<td class="popover-hide-xs">Waiting for approval.</td>';
                            }
                            else if (value["IsPublished"] != null && value["IsPublished"]){
                                strhtml += '<td class="popover-hide-xs">Published</td>';
                            }
                            else {
                                strhtml += '<td class="popover-hide-xs"></td>';
                            }
                        }
                        //}
                        else {
                            strhtml += '<td></td>';
                        }
                        strhtml += '</tr>';
                    });
                    strhtml += '</tbody></table>';
                    $("#PagesLinks").html(strhtml);
                    $("[data-toggle=popover]").each(function (i, obj) {
                        $(this).popover({
                            html: true,
                            content: function () {
                                var id = $(this).attr('id')
                                return $('#popover-content-' + id).html();
                            }
                        });

                    });
                    $(".aniimated-thumbnials").lightGallery({
                        thumbnail: true,
                        animateThumb: false,
                        loop: false,
                        enableSwipe: true

                    });
                }
                else
                    $("#PagesLinks").html('<span class="center">No Pages found.</span>');

                $('#PagesLinksModal').modal('show');
            });
        });
    }

    function OpenAssignedExcelDownloadView(e, assignmentID, assigned, assignToID) {
        var name = e.id;
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $("#ExcelPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#ExcelModal').modal('show');
        setTimeout(function() {
            if (assigned == true) {
                $("#ExcelAssignedDownloadLink").attr("href", '/Home/GetAssignedUnchangedExcel?FileName=' + name + '&userId=' + assignToID + '&AssignmentId=' + assignmentID, '_blank');
                $.get('@Url.Action("LoadAssignedExcel", "Home")', { originalDocumentName: name, name: name, userid: assignToID, IsReadOnly: true, assignmentId: assignmentID }, function (partialView) {
                    $("#ExcelPartialContent").html(partialView);
                });
            } else {
                $("#ExcelAssignedDownloadLink").attr("href", '/Home/GetAssignedChangedExcel?FileName=' + name + '&userId=' + assignToID + '&AssignmentId=' + assignmentID, '_blank');
                $.get('@Url.Action("LoadAssignedChangedExcel", "Home")', { originalDocumentName: name, name: name, userid: assignToID, IsReadOnly: true, assignmentId: assignmentID }, function (partialView) {
                    $("#ExcelPartialContent").html(partialView);
                });
            }
        }, 1000);
    }

    function OpenExcel(e, assignmentID) {
        var name = e.id;
        var originalDocumentName = e.name;
        $("#ExcelAssignedDownloadLink").attr("href", '@ExcelPath' + "Sheets_" + originalDocumentName + '/AssignedDoc/' + assignmentID + "_Copy_" + name)
        $("#ExcelPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#SheetsLinksModal').modal('hide');
        $('#ExcelModal').modal('show');
        setTimeout(function () {
            $.get('@Url.Action("LoadExcel", "Home")', { OriginalDocumentName: originalDocumentName, name: name, userid: 1, IsReadOnly: true }, function (partialView) {
                $("#ExcelPartialContent").html(partialView);
                $('.dxr-minBtn').click();
                $('#Snippet_R_TC_TPTCL_MinBtn').click();
            });
        }, 1000);
    }

    function OpenChangedExcel(e) {
        var originalDocumentName = e.id;
        var name = e.name;
        $("#ChangedExcelDownloadLink").attr("href", '@ExcelPath' + "Sheets_" + originalDocumentName + '/AssignedDoc/' + name)
        $("#ChangedExcelPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#SheetsLinksModal').modal('hide');
        $('#ChangedExcelModal').modal('show');
        setTimeout(function () {
            $.get('@Url.Action("LoadChangedExcel", "Home")', { OriginalDocumentName: originalDocumentName, name: name, userid: 1, IsReadOnly: true }, function (partialView) {
                $("#ChangedExcelPartialContent").html(partialView);
                $('.dxr-minBtn').click();
                $('#Snippet_R_TC_TPTCL_MinBtn').click();
            });
        }, 1000);
    }

    function OpenTaskDocuments(e, assignmentID, assigned) {
        var name = e.id;
        var userId = '@WordAutomationDemo.Helpers.CurrentUserSession.UserID';
        $.get('@Url.Action("GetUploadedDoc", "Home")', { userId: userId, getAssigned: assigned, AssignmentId: assignmentID }, function (result) {

            var strhtml = '<table class="table table-bordered" style="word-break:break-all" id="DocTable">';
            if (result.length > 0) {
                if (!assigned) {

                    strhtml += '<thead>';
                    strhtml += '<th>Document Name</th>';
                    strhtml += '<th style="width:180px; text-align:center;">Download Document</th>';
                    strhtml += '</thead>';
                    strhtml += '<tbody>';
                }
                $.each(result, function (key, value) {

                    strhtml += '<tr>';
                    if (value["IsDocFile"] != null && value["IsDocFile"] == true) {
                        strhtml += '<td> <a href="#" onclick="OpenDownloadedDocument(this,' + assignmentID + ')" title ="Click to View">' + value["DocName"] + '</a></td>';
                    }
                    else if (value["IsPPTFile"] != null && value["IsPPTFile"] == true) {
                        strhtml += '<td> <a href="#" onclick="GetTaskPPTSlides(this,' + value["AssignedDocsID"] + ')" title ="Click to View">' + value["DocName"] + '</a></td>';
                    }
                    else {
                        strhtml += '<td>' + value["DocName"] + '</td>';
                    }
                    strhtml += '<td style="text-align:center;"> <a href="' + '@UploadedDocPath' + assignmentID + "/" + value["DocName"] + '" title ="Click to Download" >' + '<img src="' + value["DownloadImagePath"] + '" style="cursor:pointer" />' + '</a></td>';
                    strhtml += '</tr>';
                });
                strhtml += '</tbody></table>';
                $("#UploadedDoc").html(strhtml);
            }
            else
                $("#UploadedDoc").html('<span class="center">No Documents have been uploaded.</span>');

            $('#UploadedDocModal').modal('show');
        });
    }

    function OpenDownloadedDocument(doc, assignmentID) {
        $("#UploadedDocumentDownloadLink").attr("href", '@UploadedDocPath' + assignmentID + "/" + doc.text)
        $("#UploadedPartialContent").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#UploadedDocModal').modal('hide');
        $('#UploadedDocumentModal').modal('show');
        $.get('@Url.Action("LoadDownloadedDoc", "Home")', { name: doc.text, assignmentID: assignmentID, userid: 1, IsReadOnly: true }, function (partialView) {
            $("#UploadedPartialContent").html(partialView);
            $('.dxr-minBtn').click();
        });
    }

    function CloseUploadedDoc() {
        $('#UploadedDocModal').modal('show');
    }

    function CloseAssignedExcel() {
        $('#ExcelModal').modal('hide');
        $('#SheetsLinksModal').modal('show');
    }

    function CloseUpdatedExcel() {
        $('#UpdatedExcelModal').modal('hide');
    }

    function CloseChangedExcel() {
        $('#ExcelModal').modal('hide');
        $('#SheetsLinksModal').modal('show');
    }

    function CloseTaskSlides() {
        $('#UploadedDocModal').modal('show');
    }

    function ShowImg(obj) {
        $('.popup').hide();
        $('.popup').html('<img style="border:1px solid" src="' + $(obj).data('id') + '" />');
        var offset = $(obj).offset();

        $('.popup').css('left', 300);
        if (offset.top < 200) {
            $('.popup').css('top', (offset.top - 50));
        }
        else {
            $('.popup').css('top', 50);
        }
        $('.popup').show();
    }

    function HideImg(obj) {
        $('.popup').hide();
    }

    function getPendingTaskCount() {
        $.get('@Url.Action("GetPendingTaskCount", "Home")', {}, function (data) {
            if (data != null && data > 0) {
                $("#BulkDiv").show();
            }
            else {
                $("#BulkDiv").hide();
            }
        });
    }
    //databound column
    function onGridDataBound(e) {
        $(".k-grouping-header").remove();

        var grid = $("#" + e.sender.element[0].id).data("kendoGrid");
        var dataSource = grid.dataSource;
        //total records
        var totalRecords = dataSource.total();
        if (totalRecords <= 0) {
            var colCount = grid.columns.length;
            $("#" + e.sender.element[0].id).find('tbody').html('');
            $("#" + e.sender.element[0].id).find('tbody').append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data" style="text-align: center;">No records found.</td></tr>');
        }
        getPendingTaskCount();
    }



    function Check_CheckBox_Count_ApproveDecline(action) {
        var n = $("input[name=chkDelete]"), t = n.filter(":checked").length;

        if (t > 0) {
            //var ConfStat = confirm("Are you sure? Do you want to " + action + " selected task(s)?");
            var $confirm = $("#modalConfirmYesNo");
            $confirm.modal('show');
            $("#lblTitleConfirmYesNo").html("Triyosoft");
            $("#lblMsgConfirmYesNo").html("Are you sure? Do you want to " + action + " selected task(s)?");
            $("#btnYesConfirmYesNo").off('click').click(function () {
                //if (ConfStat == true) {
                if (action == "approve") {
                    $("#btnBulkApprove").text("Approving...");
                    var Status = BulkApprove();
                    $("#btnBulkApprove").text("Approve");

                    $("#Message").html("Selected task(s) has been approved successfully")
                    $("#Message").show().focus();
                    setTimeout(function () {
                        $("#Message").hide();
                    }, 5000);

                    $("#taskgrid").data("kendoGrid").dataSource.read();
                    $confirm.modal("hide");
                }
                else if (action == "decline") {
                    OpenBulkDeclineMdl();
                    return false;
                    $confirm.modal("hide");
                }
                else {
                    return false;
                }
            });
            $("#btnNoConfirmYesNo").off('click').click(function () {

                $confirm.modal("hide");
                return false;
            });
            //else {


        }
        else {
            return (alert("Please select at least one checkbox to " + action + "."), !1);
        }
    }

    function BulkApprove() {
        var ApprovalStutus = 0;

        var $b = $('input[name=chkDelete]');
        var allVals = [];

        $b.filter(':checked').each(function () {
            allVals.push($(this).val());
        });
        $("#loading").show();
        $.ajax({
            type: "POST",
            url: SiteUrl + "Home/BulkApproveTasks",
            data: { IDs: allVals.toString() },
            cache: false,
            async: true,
            success: function (data) {
                ApprovalStutus = data;
            },
            complete: function (data) {
                $("#loading").hide();
            }
        });

        return ApprovalStutus;
    }

    function OpenBulkDeclineMdl() {
        $("#btnDeclineBulkTasks").text("Decline Selected Task(s)");

        $("#BulkDeclineRemarks").val("");
        $('#BulkDeclineModal').modal('show');
    }

    function BulkDecline() {
        $("#btnDeclineBulkTasks").text("Declining Selected Task(s)...");
        $("#btnBulkDecline").text("Declining...");

        var DeclineStutus = 0;

        var $b = $('input[name=chkDelete]');
        var allVals = [];

        $b.filter(':checked').each(function () {
            allVals.push($(this).val());
        });

        var Remarks = $("#BulkDeclineRemarks").val();

        $("#loading").show();
        $.ajax({
            type: "POST",
            url: SiteUrl + "Home/BulkDeclineTasks",
            data: { IDs: allVals.toString(), Remarks: Remarks },
            cache: false,
            async: true,
            success: function (data) {
                DeclineStutus = data;
            },
            complete: function (data) {
                $("#loading").hide();
            }
        });

        $('#BulkDeclineModal').modal('hide');
        $("#btnDeclineBulkTasks").text("Decline Selected Task(s)");
        $("#btnBulkDecline").text("Decline");

        $("#Message").html("Selected task(s) has been declined successfully")
        $("#Message").show().focus();
        setTimeout(function () {
            $("#Message").hide();
        }, 5000);

        $("#taskgrid").data("kendoGrid").dataSource.read();
    }

    $(document).ajaxStart(function () {
        if ($(".k-loading-image:visible").length > 0) {
            $("#loading").hide();
        }
        else {
            $("#loading").show();
        }
        //$(".k-loading-image").hide();
    });
    $(document).ajaxStop(function () {
        $("#loading").hide();
    });

    function OpenCommentHistory(assignmentID) {
        //var name = "Documents/" + e.id;
        $("#partialContentComment").html('<p class="center"><i class="glyphicon glyphicon-repeat glyphicon-spin"> </i>&nbsp;&nbsp;Loading...</p>');
        $('#CommentHistoryModal').modal('show');
        $.get('@Url.Action("LoadCommentHistory", "Home")', { assignmentID: assignmentID }, function (partialView) {
            $("#partialContentComment").html(partialView);
        });
    }

</script>
<script type="text/javascript">
    var x = 0;
    var flag = false;
    var Strikeflag = false;
    var isBackSpace = false;
    var BackSpaceCommand;
    var InsertCommand;
    function DocumentChanged(s, e) {

        //console.log("-- Document Changed --");

        var CurrentCommand = Snippet.core.commandManager.lastCommandsChain[0]; // detect BACKSPACE
        //console.log(CurrentCommand);
        if (CurrentCommand == BackSpaceCommand) {
            //console.log("-- BackSpace Pressed --");
            //console.log(s);
            //check for newly added text for deletion
            //var selection = Snippet.core.selection.getLastSelectedInterval();
            //Snippet.core.selection.setSelection(selection.start - 1, selection.start + 1);
            //var color = Snippet.commands.changeFontFormatting.getState().value.foreColor;
            //console.log(color);
            //if (color != '#0000FF') {
            OverrideBackSpace(Snippet, e);
            //}
            //else {
            //    Snippet.core.selection.setSelection(selection.start, selection.start);
            //}

        }
        else if (CurrentCommand == InsertCommand) { // detect INSERT Text
            console.log("-- No BackSpace --");
            console.log(s);
            GetNewAddedText(Snippet);
        }
        else {
            flag = false;
        }
    }

    function SelectionChanged(s, e) {

    }

    function DocumentInit(s, e) {
        var pointer = Snippet.core.selection.getLastSelectedInterval();
        x = (pointer.start);
        BackSpaceCommand = Snippet.core.commandManager.getCommand(__aspxRichEdit.RichEditClientCommand.ToggleBackspaceKey); // or 125
        InsertCommand = Snippet.core.commandManager.commands["117"];  // Set insert command at init
    }

    function OverrideBackSpace(rich, e) {

        Strikeflag = false;
        if (Strikeflag == false) {
            Strikeflag = true;
            rich.core.commandManager.commands["6"].execute(); // undo command
            var selection = rich.core.selection.getLastSelectedInterval();
            if (selection.length == 0) {
                rich.core.selection.setSelection(selection.start - 1, selection.start);
            }
            else if (selection.length > 0) {
                rich.core.selection.setSelection(selection.start, selection.start + selection.length);
            }
            if (rich.commands.changeFontFormatting.getState().value.foreColor == '#0000FF') {
                rich.core.commandManager.commands["7"].execute(); // redo command
            }
            else if (rich.core.commandManager.commands["24"].getState().value == 0 || rich.core.commandManager.commands["24"].getState().value == undefined) {
                rich.commands.changeFontStrikeout.execute()
            }
            rich.core.selection.setSelection(selection.start - 1, selection.start - 1);


        }
    }

    function GetNewAddedText(rich) {


        var selection = rich.core.selection.getLastSelectedInterval();
        x = (selection.start);
        if (flag == false) {
            flag = true;
            rich.core.selection.setSelection(selection.start - 1, selection.start);
            if (rich.core.commandManager.commands["24"].getState().value == 1) {
                rich.commands.changeFontStrikeout.execute();
            }
            rich.commands.changeFontFormatting.execute({ foreColor: "#0000FF" })
            rich.core.selection.setSelection(selection.start, selection.start);
        }
        else {
            rich.core.selection.setSelection(selection.start, selection.start);
            flag = false;
        }
    }
    ///Popover
    $(window).off("resize").on("resize", function () {
        $(".popover").each(function () {
            var popover = $(this);
            if (popover.is(":visible")) {
                var ctrl = $(popover.context);
                ctrl.popover('show');
            }
        });
    });

</script>
<style>
    #spreadsheet_SSFB {
        display: none !important;
    }

    #spreadsheetChanged_SSFB {
        display: none !important;
    }

    #spreadsheetOriginal_SSFB {
        display: none !important;
    }

    #spreadsheetInline_SSFB {
        display: none !important;
    }

    .tooltip-permission {
        position: absolute;
        /*display: inline-block;*/
        border-bottom: 1px dotted black;
    }

        .tooltip-permission .tooltiptext {
            visibility: hidden;
            width: 120px;
            background-color: #555;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 5px 0;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -60px;
            opacity: 0;
            transition: opacity 0.3s;
        }

            .tooltip-permission .tooltiptext::after {
                content: "";
                position: absolute;
                top: 100%;
                left: 50%;
                margin-left: -5px;
                border-width: 5px;
                border-style: solid;
                border-color: #555 transparent transparent transparent;
            }

        .tooltip-permission:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }
</style>