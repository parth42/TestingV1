@using DevExpress.Web.Mvc;
@using DevExpress.Web.Mvc.UI;
@model  WordAutomationDemo.Models.AssignmentModel

@Html.DevExpress().Spreadsheet(
    settings =>
    {
        settings.Name = "spreadsheetInlineAssigned" + Model.AssignmentID;
        settings.CallbackRouteValues = new { Controller = "Home", Action = "LoadInlineAssigned" };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.Height = System.Web.UI.WebControls.Unit.Pixel(600);
        settings.RibbonMode = DevExpress.Web.ASPxSpreadsheet.SpreadsheetRibbonMode.Ribbon;
        settings.ReadOnly = Model.IsReadOnly;
        settings.ShowConfirmOnLosingChanges = false;
        settings.ActiveTabIndex = 0;
        settings.AutoSaveMode = DevExpress.Web.Office.Internal.AutoSaveMode.On;
        settings.EnableClientSideAPI = true;
        settings.SettingsDocumentSelector.FileListSettings.View = DevExpress.Web.FileListView.Details;
        //settings.ClientSideEvents.DocumentChanged = "function(s, e){DocumentChanged(s,e)}";
        //settings.ClientSideEvents.Init = "function(s, e){DocumentInit(s,e)}";
    }
            ).Open(Path.Combine(WordAutomationDemo.Models.DirectoryManagmentUtils.InitialDemoFilesPathExcels, Model.OriginalDocumentName + "/" + Model.DocumentName), DevExpress.Spreadsheet.DocumentFormat.Xlsx).GetHtml()
