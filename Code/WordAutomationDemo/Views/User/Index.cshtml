@model WordAutomationDemo.Models.UserModel
@using Kendo.Mvc.UI
@using WordAutomationDemo.Helpers
@using WordAutomationDemo.Common
@{
    ViewBag.Title = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div>
        @Html.Partial("CommonMessages", Model.ModuleName)
    </div>
    @using (Html.BeginForm("Delete", "User", FormMethod.Post, new { @onkeypress = "return event.keyCode != 13;" }))
    {
        <div class="col-sm-12">
            <div class="main-heading title-row mbp15">
                <div class="row">
                    <div class="col-xs-4">
                        <h1 class="heading01">User Management</h1>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-4 col-sm-push-8 text-lr-xs">
                    <a href="@Url.Action("Create", "User")" class="lightblue-btn btnspace"><i class="fa fa-plus" aria-hidden="true"></i> Create New User</a>
                </div>
                <div class="col-sm-8 col-sm-pull-4">
                    <button type="submit" class="darkred-btn btnspace" id="btnDelete" onclick="return Check_CheckBox_Count('UserID');"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button>
                </div>
            </div>
        </div>
        <div class="col-sm-12 mtp20">
        <div class="table-responsive">
            <table class="table">
                <tr>
                    <td>
                        @(Html.Kendo().Grid(Model.IListUser)
      .Name("grid")
      .Events(e => e.DataBound("onGridDataBound"))
      .ToolBar(toolbar =>
      {
      toolbar.Template(@<text><div class="toolbar">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="input-group">
                                            
                                            <input type="text" class="form-control" id='searchBox' placeholder="Search for...">
                                            <span class="input-group-btn">
                                                <button class="btn btn-default" id="searchBtn" type="button"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                            </span>
                                            <span class="input-group-btn">
                                                    <button class="btn btn-default" id="refreshBtn" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                                </span>
                                        </div>
                                    </div>
                                </div>
                            </div></text>);
      })

      .Columns(columns =>
      {
          @*if (CurrentUserSession.HasDeletePermission)
          {
              columns.Template(@<text>
                @if (!item.IsAdminUser && !item.IsCurrentUser)
                {<input id="chkDelete" name="chkDelete" type="checkbox" class="singleCheckBox" value="@item.UserId" onclick="return initializeSingleCheckBox(this.id);" />}</text>).HtmlAttributes(new { style = "text-align:center" })
            .ClientTemplate("#if(!IsAdminUser && !IsCurrentUser) { #" + "<input type='checkbox' id='chkDelete' name='chkDelete' class='singleCheckBox' value='#= UserId #' onclick='return initializeSingleCheckBox(this.id);' />" + "#} #").HtmlAttributes(new { style = "text-align:center" })
            .HeaderTemplate(@<input id="allCheckBox" name="allCheckBox" type="checkbox" title="check all records" onclick="return initializeAllCheckBox();" />).HeaderHtmlAttributes(new { style = "text-align:center" }).Width("2%");
          }
          if (CurrentUserSession.HasEditPermission)
          {
              columns.Template(@<text>
                @if (!item.IsAdminUser)
                {<a href="@Url.Action("Edit", "User", new { id = item.UserId })" class="tableicon bluebg" data-original-title="Edit User" data-toggle="tooltip" data-placement="top"><i class="fa fa-pencil" aria-hidden="true"></i></a>}</text>)
                .ClientTemplate("# if(!IsAdminUser) { #" + "<a href='" + Url.Action("Edit", "User", new { id = "#= UserId #" }) + "'" + " class='tableicon bluebg' data-original-title='Edit User' data-toggle='tooltip' data-placement='top'><i class='fa fa-pencil' aria-hidden='true'></i></a>" + "# } #")
                .HtmlAttributes(new { style = "text-align:center" })
                .HeaderHtmlAttributes(new { style = "text-align:center;width:4%" }).Title("Edit");
          }*@
          if (CurrentUserSession.HasDeletePermission)
          {
          columns.Template(@<text>
                <input id="chkDelete" name="chkDelete" type="checkbox" class="singleCheckBox" value="@item.UserId" onclick="return initializeSingleCheckBox(this.id);" /></text>).HtmlAttributes(new { style = "text-align:center" })
            .ClientTemplate("<input type='checkbox' id='chkDelete' name='chkDelete' class='singleCheckBox' value='#= UserId #' onclick='return initializeSingleCheckBox(this.id);' />").HtmlAttributes(new { style = "text-align:center" })
            .HeaderTemplate(@<input id="allCheckBox" name="allCheckBox" type="checkbox" title="check all records" onclick="return initializeAllCheckBox();" />).HeaderHtmlAttributes(new { style = "text-align:center" });
                        }
                        
                        if (CurrentUserSession.HasEditPermission)
          {
                        columns.Template(@<text>
                <a href="@Url.Action("Edit", "User", new { UID = item.EncryptedUserId })" class="tableicon bluebg" data-original-title="Edit User" data-toggle="tooltip" data-placement="top"><i class="fa fa-pencil" aria-hidden="true"></i></a></text>)
                .ClientTemplate("<a href='" + Url.Action("Edit", "User", new { UID = "#= EncryptedUserId #" }) + "'" + " class='tableicon bluebg' data-original-title='Edit User' data-toggle='tooltip' data-placement='top'><i class='fa fa-pencil' aria-hidden='true'></i></a>")
                .HtmlAttributes(new { style = "text-align:center" })
                .HeaderHtmlAttributes(new { style = "text-align:center;width:4%" }).Title("Edit");
                }

          if (CurrentUserSession.HasDetailPermission)
          {
              columns.Bound(u => u.UserName).Template(@<text><a href="@Url.Action("Detail", "User", new { UID = item.EncryptedUserId })" title="Detail">@item.UserName</a></text>)
                                        .ClientTemplate("<a href='" + Url.Action("Detail", "User", new { UID = "#= EncryptedUserId #" }) + "'" + "  title = 'Detail'>#= UserName #</a>");
          }
          else
          {
              columns.Bound(u => u.UserName).Title("UserName");
          }
          columns.Bound(user => user.FullName);
          columns.Bound(user => user.EmailID);
          columns.Bound(user => user.Company);
          columns.Bound(user => user.Role);
          columns.Bound(user => user.Active).HeaderTemplate("Status");
      }).Pageable(pageable => pageable.Refresh(true).PageSizes(Global.recordPerPageList).ButtonCount(Global.buttonCount).Input(true).Numeric(true))
                                          .DataSource(dataSource => dataSource
                                              .Ajax()
                                              .PageSize(Global.PageSize)
                                              .Read(read => read.Action("User_Read", "User")))
                                              .Sortable()
                                              .Filterable(f=>f.Extra(false))
                                              .Groupable(g => g.Enabled(true))
                                              .EnableCustomBinding(true)
                        )

                    </td>
                </tr>
            </table>
        </div>

    </div>
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var grid = $("#grid").data("kendoGrid");

        $("#searchBox").keypress(function (e) {
            if (e.which == 13) { //search on Enter
                var searchValue = $('#searchBox').val();
                if (searchValue) {
                    grid.dataSource.filter({ field: "FullName", operator: "contains", value: searchValue });
                } else {
                    grid.dataSource.filter({});
                }
            }
        });

        $("#searchBtn").click(function () {
            var searchValue = $("#searchBox").val();
            if (searchValue) {
                grid.dataSource.filter({ field: "FullName", operator: "contains", value: searchValue });
            } else {
                grid.dataSource.filter({});
            }
        });

        $("#refreshBtn").click(function () {
            $("#searchBox").val("");
            grid.dataSource.filter({});
        });

    });
</script>