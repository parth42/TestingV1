@model WordAutomationDemo.Models.RolePrivilegesModel
@using WordAutomationDemo.Helpers;
@{
    ViewBag.Title = "Role Privileges Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/CSS/Common/kendo.blueopal.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/Custom/RolePrivileges.js")" type="text/javascript"></script>
<div class="row">
    <div class="col-sm-12">
        <div class="main-heading title-row mbp15">
            <div class="row">
                <div class="col-xs-12">
                    <h1 class="heading01">Role Privileges Management</h1>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("Index", "RolePrivileges", FormMethod.Post))
    {
        <div class="col-sm-12">
            @Html.Partial("CommonMessages", Model.ModuleName)
        </div>
        if (WordAutomationDemo.Helpers.CurrentUserSession.User.IsSuperAdmin)
        {
            <div class="col-sm-4">
                <div class="form-group multiselectbox">
                    <label for="selectMembers">Company</label>
                    @Html.DropDownListFor(model => model.Company_ID, Model.Company, "- Select Company -", new { @class = "form-control", onchange = "getRoles(this.value)", @id = "ddlCompany" })
                </div>
            </div>
        }
        <div class="col-sm-4">
            <div class="form-group multiselectbox">
                <label for="selectMembers">Role</label>
                @Html.DropDownListFor(model => model.Role_ID, Model.Roles ?? new List<SelectListItem>(), " - Select Role - ", new { @id = "Role_ID", @class = "form-control col-md-5 ", onchange = "getPrivileges(this.value)" })
            </div>
        </div>

        if (ViewData["RolePrivileges"] != null)
        {<div class="col-sm-12 mtp10">
            <div class="table-responsive">
                <div id="grid" class="k-grid">
                    <table border="0" cellspacing="1" cellpadding="0" style="border: 1px solid #94C0D2;" class="grid-tab">
                        <thead class="k-grid-header">
                            <tr class="grid-header-bg">
                                <td class="grid-header" style="color:#fff;">
                                    Menu Item
                                </td>
                                <td class="grid-header gridViewHeader" style="text-align:center; color:#fff;">
                                    View
                                    <br />
                                    <input type="checkbox" name="chkViewAll" id="chkViewAll" style="vertical-align: middle" />
                                </td>
                                <td class="grid-header gridAddHeader" style="text-align: center; color: #fff;">
                                    Add
                                    <br />
                                    <input type="checkbox" name="chkAddAll" id="chkAddAll" style="vertical-align: middle" />
                                </td>
                                <td class="grid-header gridEditHeader" style="text-align: center; color: #fff;">
                                    Edit
                                    <br />
                                    <input type="checkbox" name="chkEditAll" id="chkEditAll" style="vertical-align: middle" />
                                </td>
                                <td class="grid-header gridDeleteHeader" style="text-align: center; color: #fff;">
                                    Delete
                                    <br />
                                    <input type="checkbox" name="chkDeleteAll" id="chkDeleteAll" style="vertical-align: middle" />
                                </td>
                                <td class="grid-header gridDetailHeader" style="text-align: center; color: #fff;">
                                    Detail
                                    <br />
                                    <input type="checkbox" name="chkDetailAll" id="chkDetailAll" style="vertical-align: middle" />
                                </td>
                            </tr>
                        </thead>
                        @{
                            int j = 0;
                            System.Data.DataTable dtRolePrivileges = ViewData["RolePrivileges"] as System.Data.DataTable;

                            for (int i = 0; i < dtRolePrivileges.Rows.Count; i++)
                            {
                                j += 1;
                                int ParentId = Convert.ToInt32(dtRolePrivileges.Rows[i]["ParentID"].ToString());
                                int MainParentID = Convert.ToInt32(dtRolePrivileges.Rows[i]["MainParentID"]);
                                string MenuItem = Convert.ToString(dtRolePrivileges.Rows[i]["MenuItem"]);
                                string strMenuItemId = Convert.ToString(dtRolePrivileges.Rows[i]["MenuItemID"]);

                                if (!MenuItem.Equals("Updated Document") || CurrentUserSession.User.IsSuperAdmin || CurrentUserSession.User.IsAdminUser)
                                {
                <tr class="@(j % 2 == 0 ? "grid-row" : "k-alt")">
                    <td class="grid-text">
                        @if (ParentId == 0)
                        {
                            <span style="font-weight:bold;">
                                @Html.Encode(MenuItem)
                            </span>
                        }
                        else if (ParentId == 1)
                        {
                            <span style="padding-left: 18px;">
                                @Html.Encode(MenuItem)
                            </span>
                        }
                        else
                        {
                            <span style="padding-left: 18px;">
                                @Html.Encode(MenuItem)
                            </span>
                        }
                        <input type="hidden" id="hdMenuItemID" name="hdMenuItemID" value="@Html.Encode((dtRolePrivileges.Rows[i]["MenuItemID"].ToString()))" />
                    </td>
                    <td class="grid-text chkView" style="text-align:center;">
                        @if (ParentId > 0)
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["View"]))
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkView" value="@("v" + Html.Encode(strMenuItemId))" class="@("chkView" + MainParentID)" id="@("View_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkView','chkViewPar','@MainParentID',this); CheckSubMenu('@strMenuItemId',this); UnSelectHeaderCheckbox('chkView','chkViewAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkView" value="@("v" + Html.Encode(strMenuItemId))" class="@("chkView" + MainParentID)"
                                           id="@("View_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkView','chkViewPar','@MainParentID',this); UnSelectHeaderCheckbox('chkView','chkViewAll');" />
                                }
                            }
                            else
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkView" value="@("v" + Html.Encode(strMenuItemId))" class="@("chkView" + MainParentID)" id="@("View_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkView','chkViewPar','@MainParentID',this);UnSelectHeaderCheckbox('chkView','chkViewAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkView" value="@("v" + Html.Encode(strMenuItemId))" class="@("chkView" + MainParentID)" id="@("View_" + Html.Encode(strMenuItemId) + "_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])))"
                                           onclick="javascript:UncheckParentCheckbox('chkView','chkViewPar','@MainParentID', this); UnSelectHeaderCheckbox('chkView','chkViewAll');" />
                                }
                            }
                        }
                        else
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["View"]))
                            {
                                <input type="checkbox" name="chkView" value="@("v" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" checked="checked" class="@("chkViewPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckViewChildCheckBox(this,'@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkView','chkViewAll');" />
                            }
                            else
                            {
                                <input type="checkbox" name="chkView" value="@("v" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" class="@("chkViewPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckViewChildCheckBox(this,'@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkView','chkViewAll');" />
                            }
                        }
                    </td>
                    <td class="grid-text chkAdd" style="text-align:center;">
                        @if (ParentId > 0)
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Add"]))
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkAdd" value="@("a" + Html.Encode(strMenuItemId))" class="@("chkAdd" + MainParentID)" id="@("Add_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkAdd','chkAddPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID'); UnSelectHeaderCheckbox('chkAdd','chkAddAll'); " />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkAdd" value="@("a" + Html.Encode(strMenuItemId))" class="@("chkAdd" + MainParentID)"
                                           id="@("Add_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId)) "
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkAdd','chkAddPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkAdd','chkAddAll');" />
                                }
                            }
                            else
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkAdd" value="@("a" + Html.Encode(strMenuItemId))" class="@("chkAdd" + MainParentID)" id="@("Add_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkAdd','chkAddPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkAdd','chkAddAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkAdd" value="@("a" + Html.Encode(strMenuItemId))" class="@("chkAdd" + MainParentID)" id="@("Add_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkAdd','chkAddPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkAdd','chkAddAll');" />
                                }
                            }
                        }
                        else
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Add"]))
                            {
                                <input type="checkbox" name="chkAdd" value="@("a" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" checked="checked" class="@("chkAddPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkAdd','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkAdd','chkAddAll');" />
                            }
                            else
                            {
                                <input type="checkbox" name="chkAdd" value="@("a" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" class="@("chkAddPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkAdd','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkAdd','chkAddAll');" />
                            }
                        }
                    </td>
                    <td class="grid-text chkEdit" style="text-align:center;">
                        @if (ParentId > 0)
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Edit"]))
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkEdit" value="@("e" + Html.Encode(strMenuItemId))" class="@("chkEdit" + MainParentID)" id="@("Edit_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkEidt','chkEditPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkEdit','chkEditAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkEdit" value="@("e" + Html.Encode(strMenuItemId))" class="@("chkEdit" + MainParentID)"
                                           id="@("Edit_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkEidt','chkEditPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkEdit','chkEditAll');" />
                                }
                            }
                            else
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkEdit" value="@("e" + Html.Encode(strMenuItemId))" class="@("chkEdit" + MainParentID)"
                                           id="@("Edit_" + Html.Encode(strMenuItemId))" onclick="javascript:UncheckParentCheckbox('chkEidt','chkEditPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkEdit','chkEditAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkEdit" value="@("e" + Html.Encode(strMenuItemId))" class="@("chkEdit" + MainParentID)"
                                           id="@("Edit_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkEidt','chkEditPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkEdit','chkEditAll');" />
                                }
                            }
                        }
                        else
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Edit"]))
                            {
                                <input type="checkbox" name="chkEdit" value="@("e" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" checked="checked" class="@("chkEditPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkEdit','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkEdit','chkEditAll');" />
                            }
                            else
                            {
                                <input type="checkbox" name="chkEdit" value="@("e" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" class="@("chkEditPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkEdit','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkEdit','chkEditAll');" />
                            }
                        }
                    </td>
                    <td class="grid-text chkDelete" style="text-align:center;">
                        @if (ParentId > 0)
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Delete"]))
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkDelete" value="@("d" + Html.Encode(strMenuItemId))" class="@("chkDelete" + MainParentID)" id="@("Delete_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkDelete','chkDeletePar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDelete','chkDeleteAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkDelete" value="@("d" + Html.Encode(strMenuItemId))" class="@("chkDelete" + MainParentID)" id="@("Delete_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkDelete','chkDeletePar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDelete','chkDeleteAll');" />
                                }
                            }
                            else
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkDelete" value="@("d" + Html.Encode(strMenuItemId))" class="@("chkDelete" + MainParentID)" id="@("Delete_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkDelete','chkDeletePar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDelete','chkDeleteAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkDelete" value="@("d" + Html.Encode(strMenuItemId))" class="@("chkDelete" + MainParentID)"
                                           id="@("Delete_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkDelete','chkDeletePar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDelete','chkDeleteAll');" />
                                }
                            }
                        }
                        else
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Delete"]))
                            {
                                <input type="checkbox" name="chkDelete" value="@("d" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" checked="checked" class="@("chkDeletePar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkDelete','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkDelete','chkDeleteAll');" />
                            }
                            else
                            {
                                <input type="checkbox" name="chkDelete" value="@("d" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" class="@("chkDeletePar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkDelete','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkDelete','chkDeleteAll');" />
                            }
                        }
                    </td>
                    <td class="grid-text chkDetail" style="text-align:center;">
                        @if (ParentId > 0)
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Detail"]))
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkDetail" value="@("de" + Html.Encode(strMenuItemId))" class="@("chkDetail" + MainParentID)" id="@("Detail_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkDetail','chkDetailPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDetail','chkDetailAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkDetail" value="@("de" + Html.Encode(strMenuItemId))" class="@("chkDetail" + MainParentID)"
                                           id="@("Detail_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           checked="checked" onclick="javascript:UncheckParentCheckbox('chkDetail','chkDetailPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDetail','chkDetailAll');" />
                                }
                            }
                            else
                            {
                                if (ParentId == 1)
                                {
                                    <input type="checkbox" name="chkDetail" value="@("de" + Html.Encode(strMenuItemId))" class="@("chkDetail" + MainParentID)" id="@("Detail_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkDetail','chkDetailPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDetail','chkDetailAll');" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkDetail" value="@("de" + Html.Encode(strMenuItemId))" class="@("chkDetail" + MainParentID)"
                                           id="@("Detail_" + Html.Encode(Convert.ToString(dtRolePrivileges.Rows[i]["ParentID"])) + "_" + Html.Encode(strMenuItemId))"
                                           onclick="javascript:UncheckParentCheckbox('chkDetail','chkDetailPar','@MainParentID',this);SelectViewDetail('@strMenuItemId',this,'@MainParentID');UnSelectHeaderCheckbox('chkDetail','chkDetailAll');" />
                                }
                            }
                        }
                        else
                        {
                            if (Convert.ToBoolean(dtRolePrivileges.Rows[i]["Detail"]))
                            {
                                <input type="checkbox" name="chkDetail" value="@("de" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" checked="checked" class="@("chkDetailPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkDetail','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkDetail','chkDetailAll');" />
                            }
                            else
                            {
                                <input type="checkbox" name="chkDetail" value="@("de" + Html.Encode(strMenuItemId))" id="@Html.Encode(strMenuItemId)" class="@("chkDetailPar" + Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"]))"
                                       onclick="javascript:CheckUncheckChildCheckBox(this,'chkDetail','@Convert.ToInt32(dtRolePrivileges.Rows[i]["MenuItemID"])'); UnSelectHeaderCheckbox('chkDetail','chkDetailAll');" />
                            }
                        }
                    </td>
                </tr>
                                    }
                                }
                            }
                    </table>
                </div>
            </div>
            <div class="clearfix mtp10 pull-right">
                @if (WordAutomationDemo.Helpers.CurrentUserSession.HasAddPermission || WordAutomationDemo.Helpers.CurrentUserSession.HasEditPermission)
                {
                    <input name="btnSubmit" type="submit" class="lightblue-btn btnspace btnSubmitForm" id="btnSubmit" value="Save" title="Save" />
                }
            </div>
        </div>
        }
    }
</div>
<script>
    UnSelectHeaderCheckbox('chkView', 'chkViewAll');
    UnSelectHeaderCheckbox('chkAdd', 'chkAddAll');
    UnSelectHeaderCheckbox('chkEdit', 'chkEditAll');
    UnSelectHeaderCheckbox('chkDelete', 'chkDeleteAll');
    UnSelectHeaderCheckbox('chkDetail', 'chkDetailAll');
    function getRoles(id) {
        $("#Role_ID option").remove();
        $("#Role_ID").append('<option value=""> - Select Role - </option>');
        $.get('@Url.Action("GetRolesByCompanyID", "RolePrivileges")', { companyID: id }, function (result) {

            if (result.length > 0) {

                $.each(result, function (key, value) {
                    $("#Role_ID").append('<option value="' + value["Value"] + '">' + value["Text"] + '</option>');
                });
            }
            else {
                $("#Role_ID option").remove();
                $("#Role_ID").append('<option value=""> - Select Role - </option>');
            }

        });
    }
</script>
