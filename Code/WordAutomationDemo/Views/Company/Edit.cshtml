@model WordAutomationDemo.Models.CompanyModel
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Edit Company";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/Custom/Company.js")" type="text/javascript"></script>
<div class="row">
    <div class="col-sm-12">
        <div class="main-heading title-row mbp15">
            <div class="row">
                <div class="col-xs-12">
                    <h1 class="heading01">Edit Company</h1>
                </div>

            </div>
        </div>
    </div>
    <div class="col-sm-12 mtp10">
        <div class="alert alert-success" id="SuccessMessage" style="display: none;">
            <strong>Success!</strong>
        </div>
        <div class="alert alert-danger" id="ErrorMessage" style="display: none;">
            <strong>Danger!</strong>
        </div>
        <div class="alert alert-danger" id="duplicateRecord" style="display: none;">
            @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.AlreadyExists, "Company"))
        </div>
        @using (Html.BeginForm("Edit", "Company", FormMethod.Post, new { enctype = "multipart/form-data", id = "CreateUpload" }))
        {
            @Html.AntiForgeryToken()
            <div class="alert alert-danger" id="validationSummary">
            </div>
            <div class="row">
                <div class="col-sm-4">
                    @Html.HiddenFor(x => x.CompanyID)
                    <div class="form-group">
                        <label for="name">Name<span class="mandatory">*</span></label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", onchange = "javascript:return ValidateDuplicateCompany('Company/ValidateDuplicateCompany','Name','Name','CompanyID','Company');" })
                        <p class="errormessage">
                            @Html.ValidationMessageFor(model => model.Name)
                            <span id='spanConfirm'></span>
                        </p>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address)
                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Country)
                        @Html.TextBoxFor(model => model.Country, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.State)
                        @Html.TextBoxFor(model => model.State, new { @class = "form-control col-md-5" })
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.City)
                        @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Zip)
                        @Html.TextBoxFor(model => model.Zip, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.WebsiteURL)
                        @Html.TextBoxFor(model => model.WebsiteURL, new { @class = "form-control" })
                        <p class="errormessage">
                            @Html.ValidationMessageFor(model => model.WebsiteURL)
                            <span id='spanConfirm'></span>
                        </p>
                    </div>
                </div>

                @if (!(Model.IsSuperAdmin.HasValue && Model.IsSuperAdmin.Value))
                {
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="name">Status</label>
                            <div class="clearfix">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.IsActive, true, new { id = "active", value = "Doc", @checked = "checked" }) Active
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.IsActive, false, new { id = "inActive" }) InActive
                                </label>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.IsActive)
                }




                <div class="col-sm-4">
                    <div class="form-group multiselectbox">
                        <label for="UploadNewFile">Upload Company Logo</label>
                        <div class="input-group">
                            <input type="text" class="form-control" readonly="">
                            <label class="input-group-btn">
                                <span class="btn btn-primary">
                                    Browse… <input type="file" name="imgCompanyLogo" id="imgCompanyLogo" style="display: none;" accept="image/x-png,image/gif,image/jpeg">
                                </span>
                            </label>
                        </div>
                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group multiselectbox">
                        <label for="dropdownCompany">Date Format<span class="mandatory">*</span></label>
                        @Html.DropDownListFor(model => model.DateFormatID, Model.SelectDateFormat, "- Select Date Format -", new { @class = "form-control", @id = "dropdownDateFormat" })
                        <p class="errormessage">
                            @Html.ValidationMessageFor(model => model.DateFormatID)
                        </p>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="thumbimg">
                        <a href="#" class="thclose" id="btnRemoveImage"><i class="fa fa-times" aria-hidden="true"></i></a>
                        <img src="~/ApplicationDocuments/CompanyLogos/@Model.CompanyLogo" id="imgCLogo" class=" img-thumbnail img-responsive" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="name">Messenger Service</label>
                        <div class="clearfix">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.IsMessengerServiceEnable, true, new { id = "enable", value = "Doc", @checked = "checked" }) Enable
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.IsMessengerServiceEnable, false, new { id = "disable" }) Disable
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="name">Exchange Server</label>
                        <div class="clearfix">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.IsAppointmentEnable, true, new { id = "enable", value = "Doc", @checked = "checked" }) Enable
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.IsAppointmentEnable, false, new { id = "disable" }) Disable
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div id="divExchangeServer" style="display:none;">
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ExchangeServerURL)
                            @Html.TextBoxFor(model => model.ExchangeServerURL, new { @class = "form-control" })
                            <p class="errormessage" style="display:none;" id="reqExchangeServerURL">
                                <span class="field-validation-error" data-valmsg-for="ExchangeServerURL" data-valmsg-replace="true"><span for="ExchangeServerURL" class="">Exchange Server URL is required.</span></span>
                            </p>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="name">Exchange Server UserName<span class="mandatory">*</span></label>
                            @Html.TextBoxFor(model => model.ExchangeServerUserName, new { @class = "form-control", @maxlength = 250 })
                            <p class="errormessage" style="display:none;" id="reqExchangeServerUserName">
                                <span class="field-validation-error" data-valmsg-for="ExchangeServerUserName" data-valmsg-replace="true"><span for="ExchangeServerUserName" class="">Exchange Server UserName is required.</span></span>
                            </p>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="name">Exchange Server Password<span class="mandatory">*</span></label>
                            @Html.TextBoxFor(model => model.ExchangeServerPassword, new { @type = "password", @class = "form-control", @maxlength = 20 })
                            @Html.Hidden("hfexchangeserverpassword", Model.ExchangeServerPassword)
                            <span style="color: green" name="result" id='exchangeServerPassComment'></span>
                            <p class="errormessage" style="display:none;" id="reqExchangeServerPassword">
                                <span class="field-validation-error" data-valmsg-for="ExchangeServerPassword" data-valmsg-replace="true"><span for="ExchangeServerPassword" class="">Exchange Server Password is required.</span></span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
                <div class="row">
                    <div class="col-sm-12">
                        <button class="lightblue-btn btnspace btnSubmitForm" type="submit" onclick="return ValidateData();"><i class="fa fa-pencil" aria-hidden="true"></i> Update</button>
                        <button class="darkblue-btn btnspace" type="button" onclick="location.href='@Url.Action("Index", "Company")';return false;"><i class="fa fa-angle-left" aria-hidden="true"></i> Back</button>
                    </div>
                </div>
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        if ($('#validationSummary').text().trim() == "") {
            $('#validationSummary').hide();
        }
        $('.btnSubmitForm').on('click', function () {
            if ($('#validationSummary').text().trim() != "") {
                $('#validationSummary').show();
            }
        });
        if ($('input[name=IsAppointmentEnable]:checked').val() == 'True') {
            $('#divExchangeServer').show();
        }
        else {
            $('#divExchangeServer').hide();
        }
        $(':radio[name=IsAppointmentEnable]').change(function () {
            var value = $(this).val();
            if (value == 'True') {
                $('#divExchangeServer').show();
            }
            else {
                $('#divExchangeServer').hide();
            }
        });
    });

    $('#imgCompanyLogo').on('change', function () {
        $("#imgCLogo, #btnRemoveImage").hide();
        $('input[name=CompanyLogo]').val(null);
    });

    $('#btnRemoveImage').on('click', function () {
        $("#imgCLogo, #btnRemoveImage").hide();
        $('input[name=CompanyLogo]').val(null);
    });

    $('#imgCLogo').load(function () { }).error(function () {
        $("#imgCLogo, #btnRemoveImage").hide();
    });
    function ValidateData() {
        var value = $('input[name=IsAppointmentEnable]:checked').val();
        if (value == 'True') {
            if ($('#ExchangeServerURL').show().val() == "" && $('#ExchangeServerUserName').val() == "" && $('#ExchangeServerPassword').val() == "") {
                $('#reqExchangeServerURL').show();
                $('#reqExchangeServerUserName').show();
                $('#reqExchangeServerPassword').show();
                return false;
            }
            else if ($('#ExchangeServerURL').val() == "") {
                $('#reqExchangeServerURL').show();
                return false;
            }
            else if ($('#ExchangeServerUserName').val() == "") {
                $('#ExchangeServerUserName').show();
                return false;
            }
            else if ($('#ExchangeServerPassword').val() == "") {
                $('#reqExchangeServerPassword').show();
                return false;
            }
        }
        else {
            $('#divExchangeServer').hide();
            return true;
        }
    }
</script>

<style>
    .imgHeightWidth50 {
        height: 50px;
        width: 50px;
    }
</style>


