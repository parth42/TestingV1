@model IEnumerable<WordAutomationDemo.Models.CompanyModel>
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Company Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-sm-12">
        <div class="main-heading title-row mbp15">
            <div class="row">
                <div class="col-xs-12">
                    <h1 class="heading01">Company Management</h1>
                </div>
            </div>
        </div>
    </div>
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Created")
{
    <div class="col-sm-12">
        <div class="alert alert-success" id="upload">
            @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.CompanyCreated))
        </div>
    </div>
            <script>
            $("#upload").show().focus();
            setTimeout(function () {
                $("#upload").hide();
            }, 5000);
        </script>

}
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "CompanyEdited")
{
    <div class="col-sm-12">
        <div class="alert alert-success" id="upload">
            @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.CompanyEdited))
        </div>
    </div>
            <script>
            $("#upload").show().focus();
            setTimeout(function () {
                $("#upload").hide();
            }, 5000);
        </script>

}
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "deleted")
{
    <div class="col-sm-12">
        <div class="alert alert-success" id="upload">
            @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.CompanyDeleted))
        </div>
    </div>
            <script>
            $("#upload").show().focus();
            setTimeout(function () {
                $("#upload").hide();
            }, 5000);
        </script>

}
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "CompanyNotFound")
{
    <div class="col-sm-12">
        <div class="alert alert-danger" id="upload">
            @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.CompanyNotFound))
        </div>
    </div>
}
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString().ToLower() == "inuse")
    {
        <div class="col-sm-12">
            <div class="alert alert-danger">
                @Html.Raw(string.Format(WordAutomationDemo.Common.Messages.IsInUse, "Company"))
            </div>
        </div>
    }
    @if (Request.QueryString["Msg"] != null && Request.QueryString["Msg"].ToString() == "Error")
{
    <div class="col-sm-12">
        <div class="alert alert-danger" id="upload">
            @Html.Encode(String.Format(WordAutomationDemo.Common.Messages.Error))

        </div>
    </div>
            <script>
            $("#upload").show().focus();
            setTimeout(function () {
                $("#upload").hide();
            }, 5000);
        </script>

}
    

    @using (Html.BeginForm("Delete", "Company", FormMethod.Post, new { @onkeypress = "return event.keyCode != 13;" }))
    {
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-4 col-sm-push-8 text-lr-xs">
                    <a href='@Url.Action("Create", "Company")' class="lightblue-btn btnspace"><i class="fa fa-plus" aria-hidden="true"></i> Create New Company</a>
                </div>
                <div class="col-sm-8 col-sm-pull-4">
                    <button class="darkred-btn btnspace" type="submit" id="btnDelete" name="btnDelete" onclick="return Check_CheckBox_Count_Company('CompanyID');"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button>
                </div>
            </div>
        </div>
    <div class="col-sm-12 mtp10">
        <div class="table-responsive nospacetd">
            <table class="table">
                <tr>
                    <td>
                        @(Html.Kendo().Grid<WordAutomationDemo.Models.CompanyModel>()
                                                  .Name("companyGrid")
                                                  .Events(e => e.DataBound("onGridDataBound"))
                                                  .Columns(columns =>
                                                  {
                                                      columns.Template(@<text>
                                                        <input id="chkDelete" name="chkDelete" type="checkbox" class="singleCheckBox" value="@item.CompanyID" onclick="return initializeSingleCheckBox(this.id);" />}</text>)
                                                            .ClientTemplate("<input type='checkbox' id='chkDelete' name='chkDelete' class='singleCheckBox' value='#= CompanyID #' onclick='return initializeSingleCheckBox(this);' />")
                                                            .HeaderTemplate(@<input id="allCheckBox" name="allCheckBox" type="checkbox" title="check all records" onclick="return initializeAllCheckBox();" />)
                                                            .HtmlAttributes(new { @class = "textalign" })
                                                            .HeaderHtmlAttributes(new { @class = "textalign" }).Width("2%");

                                                      columns.Template(@<text>
                                                                <a href="@Url.Action("Edit", "Company", new { UID = item.EncryptedCompanyID})" class="tableicon bluebg" data-original-title="Edit Company" data-toggle="tooltip" data-placement="top"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                                                    </text>)
                                                            .ClientTemplate("<a href='" + Url.Action("Edit", "Company", new { UID = "#= EncryptedCompanyID #" }) + "' " + " class='tableicon bluebg' data-original-title='Edit Company' data-toggle='tooltip' data-placement='top'><i class='fa fa-pencil' aria-hidden='true'></i></a>")
                                                            .HtmlAttributes(new { style = "text-align:center" })
                                                            .HeaderHtmlAttributes(new { style = "text-align:center;width:4%" })
                                                            .Title("Edit");

                                                      columns.Template(@<text>
                                                                <a href="@Url.Action("Details", "Company", new { UID = item.EncryptedCompanyID})" class="grid-btn-edit" title="Company Details "><i class="fa fa-pencil-square-o"></i></a></text>)
                                                            .ClientTemplate("<a href='" + Url.Action("Details", "Company", new { UID = "#= EncryptedCompanyID #" }) + "'" + " class='grid-btn-edit' title = 'Company Details'>#= Name #</a>")
                                                            .HtmlAttributes(new { style = "text-align:center" })
                                                            .HeaderHtmlAttributes(new { style = "text-align:center;" })
                                                            .Title("Name");
                                                            
                                                      columns.Bound(x => x.WebsiteURL);
                                                            
                                                      columns.Bound(x => x.Address);

                                                      columns.Bound(x => x.Country);

                                                      columns.Bound(x => x.State);

                                                      columns.Bound(x => x.City);

                                                      columns.Bound(x => x.Zip);

                                                      columns.Bound(x => x.strStatus)
                                                          .Width("5%")
                                                          .Title("Status")
                                                          .Groupable(false)
                                                          .Sortable(false)
                                                          .Filterable(false);
                                                  }).Pageable(pageable => pageable.Refresh(true).PageSizes(WordAutomationDemo.Common.Global.recordPerPageList).ButtonCount(5).Input(true).Numeric(true)).DataSource(dataSource => dataSource.Ajax().PageSize(WordAutomationDemo.Common.Global.PageSize).Read(read => read.Action("GetAllCompanies", "Company"))).Sortable().Filterable(f=>f.Extra(false)).Groupable().EnableCustomBinding(false).AutoBind(true))
                    </td>
                </tr>
            </table>
        </div>
    </div>
    }

</div>
<script>
    $(document).ready(function () {
        $(".k-grouping-header").remove();
    });

    //databound column
    function onGridDataBound(e) {
        $(".k-grouping-header").remove();
        var grid = $("#" + e.sender.element[0].id).data("kendoGrid");
        var dataSource = grid.dataSource;
        //total records
        var totalRecords = dataSource.total();
        if (totalRecords <= 0) {
            var colCount = grid.columns.length;
            $("#" + e.sender.element[0].id).find('tbody').html('');
            $("#" + e.sender.element[0].id).find('tbody').append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data" style="text-align: center;">No records found.</td></tr>');
        }
    }

    function Check_CheckBox_Count_Company() {
        var n = $("input[name=chkDelete]"), t = n.filter(":checked").length; return t > 0 ? confirm("Are you sure? Do you want to delete selected companies?") : (alert("Please select at least one checkbox to delete."), !1)
    }
</script>

